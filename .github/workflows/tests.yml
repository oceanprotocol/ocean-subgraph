name: 'Integration tests'

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy: 
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-lint-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-lint-${{ env.cache-name }}-

      - uses: actions/checkout@v2
        name: Checkout Barge
        with:
          repository: 'oceanprotocol/barge'
          path: 'barge'
      - run: npm ci
      - name: Run Barge
        working-directory: ${{ github.workspace }}/barge
        env:
          ADDRESS_FILE: ${HOME}/.ocean/ocean-contracts/artifacts/address.json
        run: |
          bash -x start_ocean.sh --with-thegraph --no-dashboard 2>&1 > start_ocean.log &
          for i in $(seq 1 500); do
            sleep 5
            [ -f "$HOME/.ocean/ocean-contracts/artifacts/ready" ] && break
            done
      - run: npm run bargesetup
        env:
          ADDRESS_FILE: /home/runner/.ocean/ocean-contracts/artifacts/address.json
      - name: create and deploy subgraph
        run: |
          npm run codegen
          npm run build
          npm run create:local-barge
          npm run deploy:local-barge
        env:
          ADDRESS_FILE: /home/runner/.ocean/ocean-contracts/artifacts/address.json
      - run: npm run test-integration