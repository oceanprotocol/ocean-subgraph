{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "id",
          "type": "string"
        }
      ],
      "name": "AllocationRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AllocationSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "skip",
          "type": "uint256"
        }
      ],
      "name": "getTotalAllocation",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "allocationIds",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "allocationAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getTotalAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_id",
          "type": "string"
        }
      ],
      "name": "getveAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_id",
          "type": "string"
        }
      ],
      "name": "setAllocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ve/veAllocate.sol"
  },
  "ast": {
    "absolutePath": "contracts/ve/veAllocate.sol",
    "exportedSymbols": {
      "veAllocate": [
        390
      ]
    },
    "id": 391,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "veAllocate",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 390,
        "linearizedBaseContracts": [
          390
        ],
        "name": "veAllocate",
        "nameLocation": "35:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "veAllocation",
            "nameLocation": "99:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 390,
            "src": "52:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(string => uint256))"
            },
            "typeName": {
              "id": 6,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "60:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "52:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(string => uint256))"
              },
              "valueType": {
                "id": 5,
                "keyType": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "79:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "71:26:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "89:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "allocationCounter",
            "nameLocation": "145:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 390,
            "src": "117:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "125:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "117:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 9,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "136:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 17,
            "mutability": "mutable",
            "name": "allocationToId",
            "nameLocation": "215:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 390,
            "src": "168:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => string))"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "176:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "168:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => string))"
              },
              "valueType": {
                "id": 15,
                "keyType": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "195:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "187:26:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                  "typeString": "mapping(uint256 => string)"
                },
                "valueType": {
                  "id": 14,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "206:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "idToAllocation",
            "nameLocation": "282:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 390,
            "src": "235:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(string => uint256))"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "243:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "235:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(string => uint256))"
              },
              "valueType": {
                "id": 21,
                "keyType": {
                  "id": 19,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "262:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "254:26:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                  "typeString": "mapping(string => uint256)"
                },
                "valueType": {
                  "id": 20,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "_totalAllocation",
            "nameLocation": "330:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 390,
            "src": "302:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "310:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "302:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "321:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 35,
            "name": "AllocationSet",
            "nameLocation": "359:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "398:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "382:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "429:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "414:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "449:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 35,
                  "src": "441:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "372:89:0"
            },
            "src": "353:109:0"
          },
          {
            "anonymous": false,
            "id": 41,
            "name": "AllocationRemoved",
            "nameLocation": "473:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "507:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "491:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "530:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "515:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "490:43:0"
            },
            "src": "467:67:0"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "662:158:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 50,
                        "name": "veAllocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "786:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(string memory => uint256))"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "id": 51,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "799:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "786:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 54,
                    "indexExpression": {
                      "id": 53,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "809:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "786:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49,
                  "id": 55,
                  "nodeType": "Return",
                  "src": "779:34:0"
                }
              ]
            },
            "functionSelector": "00b012cc",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getveAllocation",
            "nameLocation": "549:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "573:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "565:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "599:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "583:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "564:39:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "649:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:9:0"
            },
            "scope": 390,
            "src": "540:280:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "930:157:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 64,
                      "name": "_totalAllocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1054:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 66,
                    "indexExpression": {
                      "id": 65,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1071:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1054:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 63,
                  "id": 67,
                  "nodeType": "Return",
                  "src": "1047:33:0"
                }
              ]
            },
            "functionSelector": "c49a153e",
            "id": 69,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAllocation",
            "nameLocation": "835:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "862:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "854:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:18:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "917:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:9:0"
            },
            "scope": 390,
            "src": "826:261:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "1162:744:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 79,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73,
                                "src": "1186:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              ],
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1180:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 77,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "1180:5:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1180:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1180:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3530",
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1200:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "1180:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496420746f6f206c6f6e67",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1204:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7253fbc48a02b3d88a40d67426e4dfc2cf7822129b820e08c605e3f649248a81",
                          "typeString": "literal_string \"Id too long\""
                        },
                        "value": "Id too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7253fbc48a02b3d88a40d67426e4dfc2cf7822129b820e08c605e3f649248a81",
                          "typeString": "literal_string \"Id too long\""
                        }
                      ],
                      "id": 76,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1172:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1236:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1246:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1236:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "424d",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1252:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3ee531307516b0578d244c7a18c1b29609aa009eb29b9e65f9b6af25eac59a6",
                          "typeString": "literal_string \"BM\""
                        },
                        "value": "BM"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3ee531307516b0578d244c7a18c1b29609aa009eb29b9e65f9b6af25eac59a6",
                          "typeString": "literal_string \"BM\""
                        }
                      ],
                      "id": 87,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1228:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:29:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 94,
                          "name": "veAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1272:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(string memory => uint256))"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "expression": {
                            "id": 95,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1285:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1285:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1272:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 99,
                      "indexExpression": {
                        "id": 98,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1297:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1272:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1305:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1272:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 140,
                  "nodeType": "IfStatement",
                  "src": "1268:289:0",
                  "trueBody": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "1308:249:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 103,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "1330:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1339:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1330:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "534d",
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1342:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_27fcdc8d85a5bf83f804027d9f59a488526f8f80995c9bca3adc1a8eabae3a5a",
                                "typeString": "literal_string \"SM\""
                              },
                              "value": "SM"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_27fcdc8d85a5bf83f804027d9f59a488526f8f80995c9bca3adc1a8eabae3a5a",
                                "typeString": "literal_string \"SM\""
                              }
                            ],
                            "id": 102,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1322:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1322:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "1322:25:0"
                      },
                      {
                        "expression": {
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 109,
                                "name": "allocationToId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "1361:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => string storage ref))"
                                }
                              },
                              "id": 116,
                              "indexExpression": {
                                "expression": {
                                  "id": 110,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1376:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1376:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1361:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 117,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 112,
                                "name": "allocationCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "1388:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 115,
                              "indexExpression": {
                                "expression": {
                                  "id": 113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1406:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1406:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1388:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1361:57:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 118,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "1421:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "1361:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 120,
                        "nodeType": "ExpressionStatement",
                        "src": "1361:63:0"
                      },
                      {
                        "expression": {
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 121,
                                "name": "idToAllocation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "1438:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(string memory => uint256))"
                                }
                              },
                              "id": 125,
                              "indexExpression": {
                                "expression": {
                                  "id": 122,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1453:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1453:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1438:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 126,
                            "indexExpression": {
                              "id": 124,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "1465:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1438:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 127,
                              "name": "allocationCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1472:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 130,
                            "indexExpression": {
                              "expression": {
                                "id": 128,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1490:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1490:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1472:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1438:63:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 132,
                        "nodeType": "ExpressionStatement",
                        "src": "1438:63:0"
                      },
                      {
                        "expression": {
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1515:31:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 133,
                              "name": "allocationCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1515:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 136,
                            "indexExpression": {
                              "expression": {
                                "id": 134,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1533:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1533:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1515:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "1515:31:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 141,
                        "name": "_totalAllocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "1567:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 144,
                      "indexExpression": {
                        "expression": {
                          "id": 142,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1584:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1584:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1567:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 145,
                            "name": "_totalAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1610:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 148,
                          "indexExpression": {
                            "expression": {
                              "id": 146,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1627:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1627:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1610:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 149,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1653:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1610:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 151,
                            "name": "veAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1674:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(string memory => uint256))"
                            }
                          },
                          "id": 154,
                          "indexExpression": {
                            "expression": {
                              "id": 152,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1687:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1687:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1674:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                            "typeString": "mapping(string memory => uint256)"
                          }
                        },
                        "id": 156,
                        "indexExpression": {
                          "id": 155,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73,
                          "src": "1699:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1674:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1610:93:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1567:136:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:136:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 160,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1718:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1728:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1718:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 177,
                    "nodeType": "Block",
                    "src": "1784:63:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 168,
                                "name": "veAllocation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "1798:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(string memory => uint256))"
                                }
                              },
                              "id": 172,
                              "indexExpression": {
                                "expression": {
                                  "id": 169,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1811:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1811:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1798:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 173,
                            "indexExpression": {
                              "id": 171,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "1823:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1798:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 174,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "1830:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1798:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "1798:38:0"
                      }
                    ]
                  },
                  "id": 178,
                  "nodeType": "IfStatement",
                  "src": "1714:133:0",
                  "trueBody": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "1731:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 164,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73,
                              "src": "1763:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 163,
                            "name": "_removeAllocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "1745:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$returns$__$",
                              "typeString": "function (string calldata)"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1745:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "1745:22:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1875:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1875:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 182,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1887:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 183,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1892:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 179,
                      "name": "AllocationSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1861:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,uint256)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1861:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "EmitStatement",
                  "src": "1856:43:0"
                }
              ]
            },
            "functionSelector": "914db4ad",
            "id": 187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAllocation",
            "nameLocation": "1102:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1124:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1116:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1148:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1132:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1115:37:0"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:0:0"
            },
            "scope": 390,
            "src": "1093:813:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 288,
              "nodeType": "Block",
              "src": "1969:637:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 193,
                              "name": "veAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1987:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(string memory => uint256))"
                              }
                            },
                            "id": 196,
                            "indexExpression": {
                              "expression": {
                                "id": 194,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2000:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2000:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1987:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                              "typeString": "mapping(string memory => uint256)"
                            }
                          },
                          "id": 198,
                          "indexExpression": {
                            "id": 197,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "2012:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1987:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2019:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1987:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534d",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27fcdc8d85a5bf83f804027d9f59a488526f8f80995c9bca3adc1a8eabae3a5a",
                          "typeString": "literal_string \"SM\""
                        },
                        "value": "SM"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27fcdc8d85a5bf83f804027d9f59a488526f8f80995c9bca3adc1a8eabae3a5a",
                          "typeString": "literal_string \"SM\""
                        }
                      ],
                      "id": 192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1979:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1979:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1979:48:0"
                },
                {
                  "expression": {
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 204,
                          "name": "veAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2038:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(string memory => uint256))"
                          }
                        },
                        "id": 208,
                        "indexExpression": {
                          "expression": {
                            "id": 205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2051:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2051:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2038:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 209,
                      "indexExpression": {
                        "id": 207,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "2063:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2038:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2070:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2038:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "2038:33:0"
                },
                {
                  "assignments": [
                    214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 214,
                      "mutability": "mutable",
                      "name": "no",
                      "nameLocation": "2090:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 288,
                      "src": "2082:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2082:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 221,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 215,
                        "name": "idToAllocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "2095:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(string memory => uint256))"
                        }
                      },
                      "id": 218,
                      "indexExpression": {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2110:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2110:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2095:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                        "typeString": "mapping(string memory => uint256)"
                      }
                    },
                    "id": 220,
                    "indexExpression": {
                      "id": 219,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "2122:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2095:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2082:44:0"
                },
                {
                  "expression": {
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 222,
                          "name": "allocationToId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "2137:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => string storage ref))"
                          }
                        },
                        "id": 226,
                        "indexExpression": {
                          "expression": {
                            "id": 223,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2152:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2152:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2137:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 227,
                      "indexExpression": {
                        "id": 225,
                        "name": "no",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "2164:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2137:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 228,
                          "name": "allocationToId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "2170:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => string storage ref))"
                          }
                        },
                        "id": 231,
                        "indexExpression": {
                          "expression": {
                            "id": 229,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2185:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2185:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2170:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 238,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 232,
                            "name": "allocationCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2210:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 235,
                          "indexExpression": {
                            "expression": {
                              "id": 233,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2228:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2228:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2210:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2242:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2210:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2170:83:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2137:116:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:116:0"
                },
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 241,
                          "name": "idToAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2290:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(string memory => uint256))"
                          }
                        },
                        "id": 250,
                        "indexExpression": {
                          "expression": {
                            "id": 242,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2305:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2305:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2290:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 251,
                      "indexExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 244,
                            "name": "allocationToId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "2317:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                              "typeString": "mapping(address => mapping(uint256 => string storage ref))"
                            }
                          },
                          "id": 247,
                          "indexExpression": {
                            "expression": {
                              "id": 245,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2332:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2332:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2317:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                            "typeString": "mapping(uint256 => string storage ref)"
                          }
                        },
                        "id": 249,
                        "indexExpression": {
                          "id": 248,
                          "name": "no",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "2344:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2317:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2290:58:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 252,
                      "name": "no",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "2351:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2290:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "2290:63:0"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2391:68:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 255,
                          "name": "allocationToId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "2398:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                            "typeString": "mapping(address => mapping(uint256 => string storage ref))"
                          }
                        },
                        "id": 258,
                        "indexExpression": {
                          "expression": {
                            "id": 256,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2413:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2413:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2398:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 265,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 259,
                            "name": "allocationCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2425:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 262,
                          "indexExpression": {
                            "expression": {
                              "id": 260,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2443:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2443:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2425:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2457:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2425:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2398:61:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2391:68:0"
                },
                {
                  "expression": {
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2469:38:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 268,
                          "name": "idToAllocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "2476:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(string memory => uint256))"
                          }
                        },
                        "id": 271,
                        "indexExpression": {
                          "expression": {
                            "id": 269,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2491:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2491:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2476:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 273,
                      "indexExpression": {
                        "id": 272,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "2503:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2476:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "2469:38:0"
                },
                {
                  "expression": {
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "2518:31:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 276,
                        "name": "allocationCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2518:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 279,
                      "indexExpression": {
                        "expression": {
                          "id": 277,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2536:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2536:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2518:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 283,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2583:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2583:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 285,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "2595:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 282,
                      "name": "AllocationRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "2565:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2565:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 287,
                  "nodeType": "EmitStatement",
                  "src": "2560:39:0"
                }
              ]
            },
            "id": 289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeAllocation",
            "nameLocation": "1921:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1955:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 289,
                  "src": "1939:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1938:21:0"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:0:0"
            },
            "scope": 390,
            "src": "1912:694:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "2869:620:0",
              "statements": [
                {
                  "expression": {
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "allocationIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "2907:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 308,
                            "name": "allocationCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "2936:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 310,
                          "indexExpression": {
                            "id": 309,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "2954:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2936:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2923:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 305,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "2927:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 306,
                          "nodeType": "ArrayTypeName",
                          "src": "2927:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2923:41:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "2907:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "2907:57:0"
                },
                {
                  "expression": {
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 314,
                      "name": "allocationAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2975:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 318,
                            "name": "allocationCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3009:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 320,
                          "indexExpression": {
                            "id": 319,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "3027:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3009:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2995:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 315,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2999:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 316,
                          "nodeType": "ArrayTypeName",
                          "src": "2999:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2995:42:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2975:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "2975:62:0"
                },
                {
                  "assignments": [
                    325
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "_limit",
                      "nameLocation": "3056:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 388,
                      "src": "3048:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3048:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 327,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3065:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3048:18:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 328,
                        "name": "allocationCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3080:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 330,
                      "indexExpression": {
                        "id": 329,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 291,
                        "src": "3098:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3080:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 331,
                        "name": "limit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 293,
                        "src": "3110:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 332,
                        "name": "skip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "3118:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3110:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3080:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "3169:68:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 340,
                            "name": "_limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "3183:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 341,
                                "name": "allocationCounter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "3192:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 343,
                              "indexExpression": {
                                "id": 342,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "3210:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3192:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 344,
                              "name": "skip",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "3222:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3192:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3183:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "3183:43:0"
                      }
                    ]
                  },
                  "id": 349,
                  "nodeType": "IfStatement",
                  "src": "3076:161:0",
                  "trueBody": {
                    "id": 339,
                    "nodeType": "Block",
                    "src": "3124:39:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 335,
                            "name": "_limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "3138:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 336,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 293,
                            "src": "3147:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3138:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "3138:14:0"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 386,
                    "nodeType": "Block",
                    "src": "3294:189:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 362,
                              "name": "allocationIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3308:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 364,
                            "indexExpression": {
                              "id": 363,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "3322:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3308:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 365,
                                "name": "allocationToId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "3327:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => string storage ref))"
                                }
                              },
                              "id": 367,
                              "indexExpression": {
                                "id": 366,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "3342:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3327:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "id": 368,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "3352:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3327:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "src": "3308:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "3308:46:0"
                      },
                      {
                        "expression": {
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 372,
                              "name": "allocationAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 302,
                              "src": "3368:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 374,
                            "indexExpression": {
                              "id": 373,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "3386:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3368:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 375,
                                "name": "veAllocation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "3391:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(string memory => uint256))"
                                }
                              },
                              "id": 377,
                              "indexExpression": {
                                "id": 376,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 291,
                                "src": "3404:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3391:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                                "typeString": "mapping(string memory => uint256)"
                              }
                            },
                            "id": 383,
                            "indexExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 378,
                                  "name": "allocationToId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17,
                                  "src": "3431:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_string_storage_$_$",
                                    "typeString": "mapping(address => mapping(uint256 => string storage ref))"
                                  }
                                },
                                "id": 380,
                                "indexExpression": {
                                  "id": 379,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 291,
                                  "src": "3446:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3431:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                  "typeString": "mapping(uint256 => string storage ref)"
                                }
                              },
                              "id": 382,
                              "indexExpression": {
                                "id": 381,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 351,
                                "src": "3456:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3431:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3391:81:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3368:104:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "3368:104:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 354,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "3270:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 355,
                        "name": "skip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "3274:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 356,
                        "name": "_limit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "3281:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3274:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3270:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 387,
                  "initializationExpression": {
                    "assignments": [
                      351
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3260:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 387,
                        "src": "3252:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3252:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 353,
                    "initialValue": {
                      "id": 352,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "3264:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3252:16:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3289:3:0",
                      "subExpression": {
                        "id": 359,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "3289:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 361,
                    "nodeType": "ExpressionStatement",
                    "src": "3289:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3247:236:0"
                }
              ]
            },
            "functionSelector": "7eca2cea",
            "id": 389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAllocation",
            "nameLocation": "2621:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2657:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2649:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2649:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 293,
                  "mutability": "mutable",
                  "name": "limit",
                  "nameLocation": "2683:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2675:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2675:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "skip",
                  "nameLocation": "2706:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2698:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2698:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2639:77:0"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "allocationIds",
                  "nameLocation": "2793:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2777:29:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 297,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2777:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 298,
                    "nodeType": "ArrayTypeName",
                    "src": "2777:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "allocationAmounts",
                  "nameLocation": "2837:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2820:34:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 300,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2820:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 301,
                    "nodeType": "ArrayTypeName",
                    "src": "2820:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2763:101:0"
            },
            "scope": 390,
            "src": "2612:877:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 391,
        "src": "26:3465:0",
        "usedErrors": []
      }
    ],
    "src": "0:3492:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50610d84806100206000396000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c8062b012cc146100505780637eca2cea14610076578063914db4ad14610097578063c49a153e146100ac575b600080fd5b61006361005e3660046109ff565b6100d5565b6040519081526020015b60405180910390f35b610089610084366004610a52565b610115565b60405161006d929190610ac0565b6100aa6100a5366004610b6f565b610394565b005b6100636100ba366004610ba2565b6001600160a01b031660009081526004602052604090205490565b6001600160a01b03831660009081526020819052604080822090516100fd9085908590610bc4565b90815260200160405180910390205490509392505050565b6001600160a01b038316600090815260016020526040902054606090819067ffffffffffffffff81111561014b5761014b610bd4565b60405190808252806020026020018201604052801561017e57816020015b60608152602001906001900390816101695790505b506001600160a01b03861660009081526001602052604090205490925067ffffffffffffffff8111156101b3576101b3610bd4565b6040519080825280602002602001820160405280156101dc578160200160208202803683370190505b50905060006101eb8486610c00565b6001600160a01b0387166000908152600160205260409020541115610211575083610238565b6001600160a01b038616600090815260016020526040902054610235908590610c18565b90505b835b6102448286610c00565b81101561038a576001600160a01b03871660009081526002602090815260408083208484529091529020805461027990610c2f565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610c2f565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b505050505084828151811061030957610309610c6a565b6020908102919091018101919091526001600160a01b038816600090815280825260408082206002845281832085845290935290819020905161034c9190610c80565b90815260200160405180910390205483828151811061036d5761036d610c6a565b60209081029190910101528061038281610d1c565b91505061023a565b5050935093915050565b603281106103d75760405162461bcd60e51b815260206004820152600b60248201526a496420746f6f206c6f6e6760a81b60448201526064015b60405180910390fd5b6103e883111561040e5760405162461bcd60e51b8152602060048201526002602482015261424d60f01b60448201526064016103ce565b3360009081526020819052604090819020905161042e9084908490610bc4565b9081526020016040518091039020546000141561050a576000831161047a5760405162461bcd60e51b8152602060048201526002602482015261534d60f01b60448201526064016103ce565b3360009081526002602090815260408083206001835281842054845290915290206104a6908383610849565b503360009081526001602090815260408083205460039092529182902091519091906104d59085908590610bc4565b908152604080516020928190038301902092909255336000908152600190915290812080549161050483610d1c565b91905055505b3360009081526020819052604090819020905161052a9084908490610bc4565b9081526040805160209281900383019020543360009081526004909352912054610555908590610c00565b61055f9190610c18565b33600090815260046020526040902055826105835761057e8282610608565b6105b7565b336000908152602081905260409081902090518491906105a69085908590610bc4565b908152604051908190036020019020555b81816040516105c7929190610bc4565b6040519081900381208482529033907fd8c9a3d91a9712decb6f475c889dd8aadc77af5358da88983b6d6a9e123cb26f9060200160405180910390a3505050565b3360009081526020819052604080822090516106279085908590610bc4565b908152602001604051809103902054116106685760405162461bcd60e51b8152602060048201526002602482015261534d60f01b60448201526064016103ce565b3360009081526020819052604080822090516106879085908590610bc4565b9081526040805191829003602090810183209390935533600090815260039093528220906106b89085908590610bc4565b908152604080516020928190038301902054336000908152600284528281206001948590529281205491945091926106ef91610c18565b8152602080820192909252604090810160009081203382526002845282822085835290935220815490919061072390610c2f565b61072e9291906108cd565b5033600090815260036020908152604080832060028352818420858552909252918290209151839261075f91610c80565b9081526040805160209281900383019020929092553360009081526002825282812060019283905292812054909161079691610c18565b815260200190815260200160002060006107b09190610948565b336000908152600360205260409081902090516107d09085908590610bc4565b9081526040805160209281900383019020600090819055338152600190925281208054916107fd83610d37565b91905055508282604051610812929190610bc4565b6040519081900381209033907fdfff661e3eda1013045f8e1890c5ba777acb75ca06008312fe62abb41567a1bd90600090a3505050565b82805461085590610c2f565b90600052602060002090601f01602090048101928261087757600085556108bd565b82601f106108905782800160ff198235161785556108bd565b828001600101855582156108bd579182015b828111156108bd5782358255916020019190600101906108a2565b506108c9929150610985565b5090565b8280546108d990610c2f565b90600052602060002090601f0160209004810192826108fb57600085556108bd565b82601f1061090c57805485556108bd565b828001600101855582156108bd57600052602060002091601f016020900482015b828111156108bd57825482559160010191906001019061092d565b50805461095490610c2f565b6000825580601f10610964575050565b601f0160209004906000526020600020908101906109829190610985565b50565b5b808211156108c95760008155600101610986565b80356001600160a01b03811681146109b157600080fd5b919050565b60008083601f8401126109c857600080fd5b50813567ffffffffffffffff8111156109e057600080fd5b6020830191508360208285010111156109f857600080fd5b9250929050565b600080600060408486031215610a1457600080fd5b610a1d8461099a565b9250602084013567ffffffffffffffff811115610a3957600080fd5b610a45868287016109b6565b9497909650939450505050565b600080600060608486031215610a6757600080fd5b610a708461099a565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b83811015610ab557815187529582019590820190600101610a99565b509495945050505050565b6000604082016040835280855180835260608501915060608160051b860101925060208088016000805b84811015610b4f57888703605f1901865282518051808952835b81811015610b1f578281018701518a82018801528601610b04565b81811115610b2f578487838c0101525b50601f01601f191697909701840196509483019491830191600101610aea565b50505085840381870152505050610b668185610a85565b95945050505050565b600080600060408486031215610b8457600080fd5b83359250602084013567ffffffffffffffff811115610a3957600080fd5b600060208284031215610bb457600080fd5b610bbd8261099a565b9392505050565b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610c1357610c13610bea565b500190565b600082821015610c2a57610c2a610bea565b500390565b600181811c90821680610c4357607f821691505b60208210811415610c6457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c915080831680610c9c57607f831692505b6020808410821415610cbc57634e487b7160e01b86526022600452602486fd5b818015610cd05760018114610ce157610d0e565b60ff19861689528489019650610d0e565b60008a81526020902060005b86811015610d065781548b820152908501908301610ced565b505084890196505b509498975050505050505050565b6000600019821415610d3057610d30610bea565b5060010190565b600081610d4657610d46610bea565b50600019019056fea2646970667358221220252054d968279b6dd806b538231da0abd16b4fadccfaf0410c9c0c5d0174525a64736f6c634300080c0033",
  "bytecodeSha1": "a5b4e6f9556cf661f76e059cfbe47e8635b1dc93",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "veAllocate",
  "coverageMap": {
    "branches": {
      "0": {
        "veAllocate._removeAllocation": {
          "33": [
            1987,
            2020,
            true
          ]
        },
        "veAllocate.getTotalAllocation": {
          "27": [
            3080,
            3122,
            false
          ]
        },
        "veAllocate.setAllocation": {
          "28": [
            1180,
            1202,
            true
          ],
          "29": [
            1236,
            1250,
            true
          ],
          "30": [
            1272,
            1306,
            false
          ],
          "31": [
            1330,
            1340,
            true
          ],
          "32": [
            1718,
            1729,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "veAllocate._removeAllocation": {
          "19": [
            1979,
            2027
          ],
          "20": [
            2038,
            2071
          ],
          "21": [
            2137,
            2253
          ],
          "22": [
            2290,
            2353
          ],
          "23": [
            2391,
            2459
          ],
          "24": [
            2469,
            2507
          ],
          "25": [
            2518,
            2549
          ],
          "26": [
            2560,
            2599
          ]
        },
        "veAllocate.getTotalAllocation": {
          "0": [
            1047,
            1080
          ],
          "2": [
            2907,
            2964
          ],
          "3": [
            2975,
            3037
          ],
          "4": [
            3138,
            3152
          ],
          "5": [
            3183,
            3226
          ],
          "6": [
            3308,
            3354
          ],
          "7": [
            3368,
            3472
          ],
          "8": [
            3289,
            3292
          ]
        },
        "veAllocate.getveAllocation": {
          "1": [
            779,
            813
          ]
        },
        "veAllocate.setAllocation": {
          "9": [
            1172,
            1218
          ],
          "10": [
            1228,
            1257
          ],
          "11": [
            1322,
            1347
          ],
          "12": [
            1361,
            1424
          ],
          "13": [
            1438,
            1501
          ],
          "14": [
            1515,
            1546
          ],
          "15": [
            1567,
            1703
          ],
          "16": [
            1745,
            1767
          ],
          "17": [
            1798,
            1836
          ],
          "18": [
            1856,
            1899
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004b5760003560e01c8062b012cc146100505780637eca2cea14610076578063914db4ad14610097578063c49a153e146100ac575b600080fd5b61006361005e3660046109ff565b6100d5565b6040519081526020015b60405180910390f35b610089610084366004610a52565b610115565b60405161006d929190610ac0565b6100aa6100a5366004610b6f565b610394565b005b6100636100ba366004610ba2565b6001600160a01b031660009081526004602052604090205490565b6001600160a01b03831660009081526020819052604080822090516100fd9085908590610bc4565b90815260200160405180910390205490509392505050565b6001600160a01b038316600090815260016020526040902054606090819067ffffffffffffffff81111561014b5761014b610bd4565b60405190808252806020026020018201604052801561017e57816020015b60608152602001906001900390816101695790505b506001600160a01b03861660009081526001602052604090205490925067ffffffffffffffff8111156101b3576101b3610bd4565b6040519080825280602002602001820160405280156101dc578160200160208202803683370190505b50905060006101eb8486610c00565b6001600160a01b0387166000908152600160205260409020541115610211575083610238565b6001600160a01b038616600090815260016020526040902054610235908590610c18565b90505b835b6102448286610c00565b81101561038a576001600160a01b03871660009081526002602090815260408083208484529091529020805461027990610c2f565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610c2f565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b505050505084828151811061030957610309610c6a565b6020908102919091018101919091526001600160a01b038816600090815280825260408082206002845281832085845290935290819020905161034c9190610c80565b90815260200160405180910390205483828151811061036d5761036d610c6a565b60209081029190910101528061038281610d1c565b91505061023a565b5050935093915050565b603281106103d75760405162461bcd60e51b815260206004820152600b60248201526a496420746f6f206c6f6e6760a81b60448201526064015b60405180910390fd5b6103e883111561040e5760405162461bcd60e51b8152602060048201526002602482015261424d60f01b60448201526064016103ce565b3360009081526020819052604090819020905161042e9084908490610bc4565b9081526020016040518091039020546000141561050a576000831161047a5760405162461bcd60e51b8152602060048201526002602482015261534d60f01b60448201526064016103ce565b3360009081526002602090815260408083206001835281842054845290915290206104a6908383610849565b503360009081526001602090815260408083205460039092529182902091519091906104d59085908590610bc4565b908152604080516020928190038301902092909255336000908152600190915290812080549161050483610d1c565b91905055505b3360009081526020819052604090819020905161052a9084908490610bc4565b9081526040805160209281900383019020543360009081526004909352912054610555908590610c00565b61055f9190610c18565b33600090815260046020526040902055826105835761057e8282610608565b6105b7565b336000908152602081905260409081902090518491906105a69085908590610bc4565b908152604051908190036020019020555b81816040516105c7929190610bc4565b6040519081900381208482529033907fd8c9a3d91a9712decb6f475c889dd8aadc77af5358da88983b6d6a9e123cb26f9060200160405180910390a3505050565b3360009081526020819052604080822090516106279085908590610bc4565b908152602001604051809103902054116106685760405162461bcd60e51b8152602060048201526002602482015261534d60f01b60448201526064016103ce565b3360009081526020819052604080822090516106879085908590610bc4565b9081526040805191829003602090810183209390935533600090815260039093528220906106b89085908590610bc4565b908152604080516020928190038301902054336000908152600284528281206001948590529281205491945091926106ef91610c18565b8152602080820192909252604090810160009081203382526002845282822085835290935220815490919061072390610c2f565b61072e9291906108cd565b5033600090815260036020908152604080832060028352818420858552909252918290209151839261075f91610c80565b9081526040805160209281900383019020929092553360009081526002825282812060019283905292812054909161079691610c18565b815260200190815260200160002060006107b09190610948565b336000908152600360205260409081902090516107d09085908590610bc4565b9081526040805160209281900383019020600090819055338152600190925281208054916107fd83610d37565b91905055508282604051610812929190610bc4565b6040519081900381209033907fdfff661e3eda1013045f8e1890c5ba777acb75ca06008312fe62abb41567a1bd90600090a3505050565b82805461085590610c2f565b90600052602060002090601f01602090048101928261087757600085556108bd565b82601f106108905782800160ff198235161785556108bd565b828001600101855582156108bd579182015b828111156108bd5782358255916020019190600101906108a2565b506108c9929150610985565b5090565b8280546108d990610c2f565b90600052602060002090601f0160209004810192826108fb57600085556108bd565b82601f1061090c57805485556108bd565b828001600101855582156108bd57600052602060002091601f016020900482015b828111156108bd57825482559160010191906001019061092d565b50805461095490610c2f565b6000825580601f10610964575050565b601f0160209004906000526020600020908101906109829190610985565b50565b5b808211156108c95760008155600101610986565b80356001600160a01b03811681146109b157600080fd5b919050565b60008083601f8401126109c857600080fd5b50813567ffffffffffffffff8111156109e057600080fd5b6020830191508360208285010111156109f857600080fd5b9250929050565b600080600060408486031215610a1457600080fd5b610a1d8461099a565b9250602084013567ffffffffffffffff811115610a3957600080fd5b610a45868287016109b6565b9497909650939450505050565b600080600060608486031215610a6757600080fd5b610a708461099a565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b83811015610ab557815187529582019590820190600101610a99565b509495945050505050565b6000604082016040835280855180835260608501915060608160051b860101925060208088016000805b84811015610b4f57888703605f1901865282518051808952835b81811015610b1f578281018701518a82018801528601610b04565b81811115610b2f578487838c0101525b50601f01601f191697909701840196509483019491830191600101610aea565b50505085840381870152505050610b668185610a85565b95945050505050565b600080600060408486031215610b8457600080fd5b83359250602084013567ffffffffffffffff811115610a3957600080fd5b600060208284031215610bb457600080fd5b610bbd8261099a565b9392505050565b8183823760009101908152919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610c1357610c13610bea565b500190565b600082821015610c2a57610c2a610bea565b500390565b600181811c90821680610c4357607f821691505b60208210811415610c6457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c915080831680610c9c57607f831692505b6020808410821415610cbc57634e487b7160e01b86526022600452602486fd5b818015610cd05760018114610ce157610d0e565b60ff19861689528489019650610d0e565b60008a81526020902060005b86811015610d065781548b820152908501908301610ced565b505084890196505b509498975050505050505050565b6000600019821415610d3057610d30610bea565b5060010190565b600081610d4657610d46610bea565b50600019019056fea2646970667358221220252054d968279b6dd806b538231da0abd16b4fadccfaf0410c9c0c5d0174525a64736f6c634300080c0033",
  "deployedSourceMap": "26:3465:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:280;;;;;;:::i;:::-;;:::i;:::-;;;1181:25:1;;;1169:2;1154:18;540:280:0;;;;;;;;2612:877;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1093:813::-;;;;;;:::i;:::-;;:::i;:::-;;826:261;;;;;;:::i;:::-;-1:-1:-1;;;;;1054:26:0;917:7;1054:26;;;:16;:26;;;;;;;826:261;540:280;-1:-1:-1;;;;;786:22:0;;649:7;786:22;;;;;;;;;;;:27;;;;809:3;;;;786:27;:::i;:::-;;;;;;;;;;;;;;779:34;;540:280;;;;;:::o;2612:877::-;-1:-1:-1;;;;;2936:27:0;;;;;;:17;:27;;;;;;2777:29;;;;2923:41;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3009:27:0;;;;;;:17;:27;;;;;;2907:57;;-1:-1:-1;2995:42:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2995:42:0;-1:-1:-1;2975:62:0;-1:-1:-1;3048:14:0;3110:12;3118:4;3110:5;:12;:::i;:::-;-1:-1:-1;;;;;3080:27:0;;;;;;:17;:27;;;;;;:42;3076:161;;;-1:-1:-1;3147:5:0;3076:161;;;-1:-1:-1;;;;;3192:27:0;;;;;;:17;:27;;;;;;:34;;3222:4;;3192:34;:::i;:::-;3183:43;;3076:161;3264:4;3247:236;3274:13;3281:6;3274:4;:13;:::i;:::-;3270:1;:17;3247:236;;;-1:-1:-1;;;;;3327:24:0;;;;;;:14;:24;;;;;;;;:27;;;;;;;;3308:46;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;3322:1;3308:16;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;;-1:-1:-1;;;;;3391:22:0;;:12;:22;;;;;;;;;;3431:14;:24;;;;;:27;;;;;;;;;;3391:81;;;;3431:27;3391:81;:::i;:::-;;;;;;;;;;;;;;3368:17;3386:1;3368:20;;;;;;;;:::i;:::-;;;;;;;;;;:104;3289:3;;;;:::i;:::-;;;;3247:236;;;;2869:620;2612:877;;;;;;:::o;1093:813::-;1200:2;1180:22;;1172:46;;;;-1:-1:-1;;;1172:46:0;;7003:2:1;1172:46:0;;;6985:21:1;7042:2;7022:18;;;7015:30;-1:-1:-1;;;7061:18:1;;;7054:41;7112:18;;1172:46:0;;;;;;;;;1246:4;1236:6;:14;;1228:29;;;;-1:-1:-1;;;1228:29:0;;7343:2:1;1228:29:0;;;7325:21:1;7382:1;7362:18;;;7355:29;-1:-1:-1;;;7400:18:1;;;7393:32;7442:18;;1228:29:0;7141:325:1;1228:29:0;1285:10;1272:12;:24;;;;;;;;;;;;:29;;;;1297:3;;;;1272:29;:::i;:::-;;;;;;;;;;;;;;1305:1;1272:34;1268:289;;;1339:1;1330:6;:10;1322:25;;;;-1:-1:-1;;;1322:25:0;;7673:2:1;1322:25:0;;;7655:21:1;7712:1;7692:18;;;7685:29;-1:-1:-1;;;7730:18:1;;;7723:32;7772:18;;1322:25:0;7471:325:1;1322:25:0;1376:10;1361:26;;;;:14;:26;;;;;;;;1388:17;:29;;;;;;1361:57;;;;;;;:63;;1421:3;;1361:63;:::i;:::-;-1:-1:-1;1490:10:0;1472:29;;;;:17;:29;;;;;;;;;1438:14;:26;;;;;;;:31;;1472:29;;1438:26;:31;;1465:3;;;;1438:31;:::i;:::-;;;;;;;;;;;;;;;;:63;;;;1533:10;1515:29;;;;:17;:29;;;;;;:31;;;;;;:::i;:::-;;;;;;1268:289;1687:10;1674:12;:24;;;;;;;;;;;;:29;;;;1699:3;;;;1674:29;:::i;:::-;;;;;;;;;;;;;;;;;1627:10;1610:28;;;;:16;:28;;;;;;:49;;1653:6;;1610:49;:::i;:::-;:93;;;;:::i;:::-;1584:10;1567:28;;;;:16;:28;;;;;:136;1718:11;1714:133;;1745:22;1763:3;;1745:17;:22::i;:::-;1714:133;;;1811:10;1798:12;:24;;;;;;;;;;;;:29;;1830:6;;1798:24;:29;;1823:3;;;;1798:29;:::i;:::-;;;;;;;;;;;;;;:38;1714:133;1887:3;;1861:38;;;;;;;:::i;:::-;;;;;;;;;1181:25:1;;;1861:38:0;1875:10;;1861:38;;1169:2:1;1154:18;1861:38:0;;;;;;;1093:813;;;:::o;1912:694::-;2000:10;2019:1;1987:24;;;;;;;;;;;:29;;;;2012:3;;;;1987:29;:::i;:::-;;;;;;;;;;;;;;:33;1979:48;;;;-1:-1:-1;;;1979:48:0;;7673:2:1;1979:48:0;;;7655:21:1;7712:1;7692:18;;;7685:29;-1:-1:-1;;;7730:18:1;;;7723:32;7772:18;;1979:48:0;7471:325:1;1979:48:0;2051:10;2070:1;2038:24;;;;;;;;;;;:29;;;;2063:3;;;;2038:29;:::i;:::-;;;;;;;;;;;;;;;;;:33;;;;2110:10;2082;2095:26;;;:14;:26;;;;;;:31;;2122:3;;;;2095:31;:::i;:::-;;;;;;;;;;;;;;;;;2185:10;2170:26;;;;:14;:26;;;;;2242:1;2210:29;;;;;;;;2095:31;;-1:-1:-1;2170:26:0;;2210:33;;;:::i;:::-;2170:83;;;;;;;;;;;;;;-1:-1:-1;2170:83:0;;;2152:10;2137:26;;:14;:26;;;;;:30;;;;;;;:116;;:30;;2170:83;2137:116;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;2305:10:0;2290:26;;;;:14;:26;;;;;;;;2317:14;:26;;;;;:30;;;;;;;;;;2290:58;;2351:2;;2290:58;;;:::i;:::-;;;;;;;;;;;;;;;;:63;;;;2413:10;2398:26;;;;:14;:26;;;;;2457:1;2425:29;;;;;;;;2398:26;;2425:33;;;:::i;:::-;2398:61;;;;;;;;;;;;2391:68;;;;:::i;:::-;2491:10;2476:26;;;;:14;:26;;;;;;;:31;;;;2503:3;;;;2476:31;:::i;:::-;;;;;;;;;;;;;;;;2469:38;;;;;2536:10;2518:29;;:17;:29;;;;;:31;;;;;;:::i;:::-;;;;;;2595:3;;2565:34;;;;;;;:::i;:::-;;;;;;;;;;2583:10;;2565:34;;;;;1969:637;1912:694;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:348::-;244:8;254:6;308:3;301:4;293:6;289:17;285:27;275:55;;326:1;323;316:12;275:55;-1:-1:-1;349:20:1;;392:18;381:30;;378:50;;;424:1;421;414:12;378:50;461:4;453:6;449:17;437:29;;513:3;506:4;497:6;489;485:19;481:30;478:39;475:59;;;530:1;527;520:12;475:59;192:348;;;;;:::o;545:485::-;625:6;633;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;:::-;723:39;;813:2;802:9;798:18;785:32;840:18;832:6;829:30;826:50;;;872:1;869;862:12;826:50;911:59;962:7;953:6;942:9;938:22;911:59;:::i;:::-;545:485;;989:8;;-1:-1:-1;885:85:1;;-1:-1:-1;;;;545:485:1:o;1217:322::-;1294:6;1302;1310;1363:2;1351:9;1342:7;1338:23;1334:32;1331:52;;;1379:1;1376;1369:12;1331:52;1402:29;1421:9;1402:29;:::i;:::-;1392:39;1478:2;1463:18;;1450:32;;-1:-1:-1;1529:2:1;1514:18;;;1501:32;;1217:322;-1:-1:-1;;;1217:322:1:o;1544:435::-;1597:3;1635:5;1629:12;1662:6;1657:3;1650:19;1688:4;1717:2;1712:3;1708:12;1701:19;;1754:2;1747:5;1743:14;1775:1;1785:169;1799:6;1796:1;1793:13;1785:169;;;1860:13;;1848:26;;1894:12;;;;1929:15;;;;1821:1;1814:9;1785:169;;;-1:-1:-1;1970:3:1;;1544:435;-1:-1:-1;;;;;1544:435:1:o;1984:1445::-;2224:4;2272:2;2261:9;2257:18;2302:2;2291:9;2284:21;2325:6;2360;2354:13;2391:6;2383;2376:22;2429:2;2418:9;2414:18;2407:25;;2491:2;2481:6;2478:1;2474:14;2463:9;2459:30;2455:39;2441:53;;2513:4;2552:2;2544:6;2540:15;2573:1;2594;2604:699;2620:6;2615:3;2612:15;2604:699;;;2689:22;;;-1:-1:-1;;2685:36:1;2673:49;;2745:13;;2787:9;;2809:24;;;2857:1;2871:157;2887:8;2882:3;2879:17;2871:157;;;2995:12;;;2991:21;;2985:28;2962:16;;;2958:25;;2951:63;2906:12;;2871:157;;;3052:8;3047:3;3044:17;3041:106;;;3131:1;3126:2;3115:8;3107:6;3103:21;3099:30;3092:41;3041:106;-1:-1:-1;3213:2:1;3190:17;-1:-1:-1;;3186:31:1;3174:44;;;;3170:53;;;-1:-1:-1;3281:12:1;;;;3246:15;;;;2646:1;2637:11;2604:699;;;2608:3;;;3351:9;3343:6;3339:22;3334:2;3323:9;3319:18;3312:50;;;;3379:44;3416:6;3408;3379:44;:::i;:::-;3371:52;1984:1445;-1:-1:-1;;;;;1984:1445:1:o;3434:479::-;3514:6;3522;3530;3583:2;3571:9;3562:7;3558:23;3554:32;3551:52;;;3599:1;3596;3589:12;3551:52;3635:9;3622:23;3612:33;;3696:2;3685:9;3681:18;3668:32;3723:18;3715:6;3712:30;3709:50;;;3755:1;3752;3745:12;3918:186;3977:6;4030:2;4018:9;4009:7;4005:23;4001:32;3998:52;;;4046:1;4043;4036:12;3998:52;4069:29;4088:9;4069:29;:::i;:::-;4059:39;3918:186;-1:-1:-1;;;3918:186:1:o;4109:273::-;4294:6;4286;4281:3;4268:33;4250:3;4320:16;;4345:13;;;4320:16;4109:273;-1:-1:-1;4109:273:1:o;4387:127::-;4448:10;4443:3;4439:20;4436:1;4429:31;4479:4;4476:1;4469:15;4503:4;4500:1;4493:15;4519:127;4580:10;4575:3;4571:20;4568:1;4561:31;4611:4;4608:1;4601:15;4635:4;4632:1;4625:15;4651:128;4691:3;4722:1;4718:6;4715:1;4712:13;4709:39;;;4728:18;;:::i;:::-;-1:-1:-1;4764:9:1;;4651:128::o;4784:125::-;4824:4;4852:1;4849;4846:8;4843:34;;;4857:18;;:::i;:::-;-1:-1:-1;4894:9:1;;4784:125::o;4914:380::-;4993:1;4989:12;;;;5036;;;5057:61;;5111:4;5103:6;5099:17;5089:27;;5057:61;5164:2;5156:6;5153:14;5133:18;5130:38;5127:161;;;5210:10;5205:3;5201:20;5198:1;5191:31;5245:4;5242:1;5235:15;5273:4;5270:1;5263:15;5127:161;;4914:380;;;:::o;5299:127::-;5360:10;5355:3;5351:20;5348:1;5341:31;5391:4;5388:1;5381:15;5415:4;5412:1;5405:15;5557:1099;5685:3;5714:1;5747:6;5741:13;5777:3;5799:1;5827:9;5823:2;5819:18;5809:28;;5887:2;5876:9;5872:18;5909;5899:61;;5953:4;5945:6;5941:17;5931:27;;5899:61;5979:2;6027;6019:6;6016:14;5996:18;5993:38;5990:165;;;-1:-1:-1;;;6054:33:1;;6110:4;6107:1;6100:15;6140:4;6061:3;6128:17;5990:165;6171:18;6198:104;;;;6316:1;6311:320;;;;6164:467;;6198:104;-1:-1:-1;;6231:24:1;;6219:37;;6276:16;;;;-1:-1:-1;6198:104:1;;6311:320;5504:1;5497:14;;;5541:4;5528:18;;6406:1;6420:165;6434:6;6431:1;6428:13;6420:165;;;6512:14;;6499:11;;;6492:35;6555:16;;;;6449:10;;6420:165;;;6424:3;;6614:6;6609:3;6605:16;6598:23;;6164:467;-1:-1:-1;6647:3:1;;5557:1099;-1:-1:-1;;;;;;;;5557:1099:1:o;6661:135::-;6700:3;-1:-1:-1;;6721:17:1;;6718:43;;;6741:18;;:::i;:::-;-1:-1:-1;6788:1:1;6777:13;;6661:135::o;7801:136::-;7840:3;7868:5;7858:39;;7877:18;;:::i;:::-;-1:-1:-1;;;7913:18:1;;7801:136::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    26,
    3491
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xB012CC EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x7ECA2CEA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x914DB4AD EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0xC49A153E EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x63 PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP3 SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0xAA PUSH2 0xA5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6F JUMP JUMPDEST PUSH2 0x394 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0xFD SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14B JUMPI PUSH2 0x14B PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x169 JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B3 JUMPI PUSH2 0x1B3 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x1EB DUP5 DUP7 PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x211 JUMPI POP DUP4 PUSH2 0x238 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x235 SWAP1 DUP6 SWAP1 PUSH2 0xC18 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP4 JUMPDEST PUSH2 0x244 DUP3 DUP7 PUSH2 0xC00 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x38A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x279 SWAP1 PUSH2 0xC2F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2A5 SWAP1 PUSH2 0xC2F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x309 JUMPI PUSH2 0x309 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE DUP1 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 DUP5 MSTORE DUP2 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP4 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x382 DUP2 PUSH2 0xD1C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x23A JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 LT PUSH2 0x3D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x496420746F6F206C6F6E67 PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 DUP4 GT ISZERO PUSH2 0x40E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x424D PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x42E SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x50A JUMPI PUSH1 0x0 DUP4 GT PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x534D PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x4A6 SWAP1 DUP4 DUP4 PUSH2 0x849 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x4D5 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x504 DUP4 PUSH2 0xD1C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x52A SWAP1 DUP5 SWAP1 DUP5 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x555 SWAP1 DUP6 SWAP1 PUSH2 0xC00 JUMP JUMPDEST PUSH2 0x55F SWAP2 SWAP1 PUSH2 0xC18 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP3 PUSH2 0x583 JUMPI PUSH2 0x57E DUP3 DUP3 PUSH2 0x608 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP5 SWAP2 SWAP1 PUSH2 0x5A6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SSTORE JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5C7 SWAP3 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 DUP5 DUP3 MSTORE SWAP1 CALLER SWAP1 PUSH32 0xD8C9A3D91A9712DECB6F475C889DD8AADC77AF5358DA88983B6D6A9E123CB26F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x627 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SLOAD GT PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x534D PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3CE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 MLOAD PUSH2 0x687 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x20 SWAP1 DUP2 ADD DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE DUP3 KECCAK256 SWAP1 PUSH2 0x6B8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 SWAP5 DUP6 SWAP1 MSTORE SWAP3 DUP2 KECCAK256 SLOAD SWAP2 SWAP5 POP SWAP2 SWAP3 PUSH2 0x6EF SWAP2 PUSH2 0xC18 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 CALLER DUP3 MSTORE PUSH1 0x2 DUP5 MSTORE DUP3 DUP3 KECCAK256 DUP6 DUP4 MSTORE SWAP1 SWAP4 MSTORE KECCAK256 DUP2 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x723 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH2 0x72E SWAP3 SWAP2 SWAP1 PUSH2 0x8CD JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP6 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP2 MLOAD DUP4 SWAP3 PUSH2 0x75F SWAP2 PUSH2 0xC80 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 SWAP3 DUP4 SWAP1 MSTORE SWAP3 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x796 SWAP2 PUSH2 0xC18 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x948 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x7D0 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 PUSH1 0x0 SWAP1 DUP2 SWAP1 SSTORE CALLER DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x7FD DUP4 PUSH2 0xD37 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x812 SWAP3 SWAP2 SWAP1 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 CALLER SWAP1 PUSH32 0xDFFF661E3EDA1013045F8E1890C5BA777ACB75CA06008312FE62ABB41567A1BD SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x855 SWAP1 PUSH2 0xC2F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x877 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x8BD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x890 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x8BD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x8BD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x8BD JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x8A2 JUMP JUMPDEST POP PUSH2 0x8C9 SWAP3 SWAP2 POP PUSH2 0x985 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x8D9 SWAP1 PUSH2 0xC2F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x8FB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x8BD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x90C JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x8BD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x8BD JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x8BD JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x92D JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x954 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x964 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x982 SWAP2 SWAP1 PUSH2 0x985 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x986 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1D DUP5 PUSH2 0x99A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA45 DUP7 DUP3 DUP8 ADD PUSH2 0x9B6 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA70 DUP5 PUSH2 0x99A JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB5 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xA99 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x60 DUP2 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP PUSH1 0x20 DUP1 DUP9 ADD PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB4F JUMPI DUP9 DUP8 SUB PUSH1 0x5F NOT ADD DUP7 MSTORE DUP3 MLOAD DUP1 MLOAD DUP1 DUP10 MSTORE DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB1F JUMPI DUP3 DUP2 ADD DUP8 ADD MLOAD DUP11 DUP3 ADD DUP9 ADD MSTORE DUP7 ADD PUSH2 0xB04 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB2F JUMPI DUP5 DUP8 DUP4 DUP13 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP8 SWAP1 SWAP8 ADD DUP5 ADD SWAP7 POP SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xAEA JUMP JUMPDEST POP POP POP DUP6 DUP5 SUB DUP2 DUP8 ADD MSTORE POP POP POP PUSH2 0xB66 DUP2 DUP6 PUSH2 0xA85 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBBD DUP3 PUSH2 0x99A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC13 PUSH2 0xBEA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC2A JUMPI PUSH2 0xC2A PUSH2 0xBEA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC64 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP2 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0xC9C JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0xCBC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0xCD0 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0xCE1 JUMPI PUSH2 0xD0E JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xD06 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0xCED JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD30 PUSH2 0xBEA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xD46 JUMPI PUSH2 0xD46 PUSH2 0xBEA JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 KECCAK256 SLOAD 0xD9 PUSH9 0x279B6DD806B538231D LOG0 0xAB 0xD1 PUSH12 0x4FADCCFAF0410C9C0C5D0174 MSTORE GAS PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        26,
        3491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B"
    },
    "25": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xB012CC"
    },
    "37": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "EQ",
      "path": "0"
    },
    "38": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50"
    },
    "41": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7ECA2CEA"
    },
    "48": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "EQ",
      "path": "0"
    },
    "49": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76"
    },
    "52": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x914DB4AD"
    },
    "59": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "EQ",
      "path": "0"
    },
    "60": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x97"
    },
    "63": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC49A153E"
    },
    "70": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "EQ",
      "path": "0"
    },
    "71": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "74": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "78": {
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "79": {
      "first_revert": true,
      "fn": null,
      "offset": [
        26,
        3491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "80": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "81": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63"
    },
    "84": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E"
    },
    "87": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "88": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "90": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FF"
    },
    "93": {
      "fn": "veAllocate.getveAllocation",
      "jump": "i",
      "offset": [
        540,
        820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "94": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "95": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5"
    },
    "98": {
      "fn": "veAllocate.getveAllocation",
      "jump": "i",
      "offset": [
        540,
        820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "99": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "100": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "102": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "103": {
      "op": "SWAP1"
    },
    "104": {
      "op": "DUP2"
    },
    "105": {
      "op": "MSTORE"
    },
    "106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "108": {
      "op": "ADD"
    },
    "109": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "110": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "112": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "113": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "DUP1",
      "path": "0"
    },
    "114": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "115": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "SUB",
      "path": "0"
    },
    "116": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "117": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "RETURN",
      "path": "0"
    },
    "118": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "119": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89"
    },
    "122": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84"
    },
    "125": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "126": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "128": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA52"
    },
    "131": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "132": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x115"
    },
    "136": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "137": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "138": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "140": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "141": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D"
    },
    "144": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "145": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "146": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "147": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC0"
    },
    "150": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "151": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "152": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA"
    },
    "155": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5"
    },
    "158": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "159": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "161": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6F"
    },
    "164": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1093,
        1906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "165": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "166": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x394"
    },
    "169": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1093,
        1906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "170": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "171": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "STOP",
      "path": "0"
    },
    "172": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63"
    },
    "176": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA"
    },
    "179": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "180": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "182": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA2"
    },
    "185": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        826,
        1087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "186": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "193": {
      "op": "SHL"
    },
    "194": {
      "op": "SUB"
    },
    "195": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "AND",
      "path": "0",
      "statement": 0
    },
    "196": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        917,
        924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "198": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "199": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "DUP2",
      "path": "0"
    },
    "200": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "201": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "203": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "205": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "206": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "208": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "209": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "210": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "211": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        1054,
        1080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "212": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        826,
        1087
      ],
      "op": "JUMP",
      "path": "0"
    },
    "213": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "220": {
      "op": "SHL"
    },
    "221": {
      "op": "SUB"
    },
    "222": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "223": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "AND",
      "path": "0"
    },
    "224": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        649,
        656
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "226": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "227": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "228": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "229": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "231": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "232": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "233": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "234": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "236": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "DUP1",
      "path": "0"
    },
    "237": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "238": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        808
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "239": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "240": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "241": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "244": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "245": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        809,
        812
      ],
      "op": "DUP6",
      "path": "0"
    },
    "246": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        809,
        812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "247": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        809,
        812
      ],
      "op": "DUP6",
      "path": "0"
    },
    "248": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        809,
        812
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "249": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "252": {
      "fn": "veAllocate.getveAllocation",
      "jump": "i",
      "offset": [
        786,
        813
      ],
      "op": "JUMP",
      "path": "0"
    },
    "253": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "254": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "255": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "DUP2",
      "path": "0"
    },
    "256": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "257": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "259": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "ADD",
      "path": "0"
    },
    "260": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "262": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "263": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "DUP1",
      "path": "0"
    },
    "264": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "265": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "SUB",
      "path": "0"
    },
    "266": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "267": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "268": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        786,
        813
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "269": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        779,
        813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "270": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        779,
        813
      ],
      "op": "POP",
      "path": "0"
    },
    "271": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "272": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "273": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "POP",
      "path": "0"
    },
    "274": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "POP",
      "path": "0"
    },
    "275": {
      "fn": "veAllocate.getveAllocation",
      "offset": [
        540,
        820
      ],
      "op": "POP",
      "path": "0"
    },
    "276": {
      "fn": "veAllocate.getveAllocation",
      "jump": "o",
      "offset": [
        540,
        820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "277": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "284": {
      "op": "SHL"
    },
    "285": {
      "op": "SUB"
    },
    "286": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 2
    },
    "287": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "AND",
      "path": "0"
    },
    "288": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "290": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "291": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "DUP2",
      "path": "0"
    },
    "292": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "293": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "295": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "297": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "298": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "300": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "301": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "302": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2936,
        2963
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "303": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2777,
        2806
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "305": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2777,
        2806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "306": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2777,
        2806
      ],
      "op": "DUP2",
      "path": "0"
    },
    "307": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2777,
        2806
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "308": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "317": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "318": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "GT",
      "path": "0"
    },
    "319": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "320": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14B"
    },
    "323": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "324": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14B"
    },
    "327": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD4"
    },
    "330": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        2923,
        2964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "331": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "332": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "334": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "335": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "336": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP3",
      "path": "0"
    },
    "338": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "339": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "340": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "342": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "MUL",
      "path": "0"
    },
    "343": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "345": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "ADD",
      "path": "0"
    },
    "346": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP3",
      "path": "0"
    },
    "347": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "ADD",
      "path": "0"
    },
    "348": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "350": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "351": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP1",
      "path": "0"
    },
    "352": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "353": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17E"
    },
    "356": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "357": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "358": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "360": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "ADD",
      "path": "0"
    },
    "361": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "362": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "364": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "365": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "366": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "368": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "ADD",
      "path": "0"
    },
    "369": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "370": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "372": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "373": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "SUB",
      "path": "0"
    },
    "374": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "375": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "DUP2",
      "path": "0"
    },
    "376": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x169"
    },
    "379": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "380": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "381": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "POP",
      "path": "0"
    },
    "382": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2923,
        2964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "383": {
      "op": "POP"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "390": {
      "op": "SHL"
    },
    "391": {
      "op": "SUB"
    },
    "392": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 3
    },
    "393": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "AND",
      "path": "0"
    },
    "394": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "396": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "397": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "DUP2",
      "path": "0"
    },
    "398": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "399": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "401": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "403": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "404": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "406": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "407": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "408": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3009,
        3036
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "409": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2907,
        2964
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "410": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2907,
        2964
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "411": {
      "op": "POP"
    },
    "412": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "421": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "422": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "GT",
      "path": "0"
    },
    "423": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "424": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "427": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "428": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B3"
    },
    "431": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD4"
    },
    "434": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        2995,
        3037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "435": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "436": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "438": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "439": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "440": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "441": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP3",
      "path": "0"
    },
    "442": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "443": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "446": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "MUL",
      "path": "0"
    },
    "447": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "449": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "ADD",
      "path": "0"
    },
    "450": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP3",
      "path": "0"
    },
    "451": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "ADD",
      "path": "0"
    },
    "452": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "454": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "455": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "456": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "457": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DC"
    },
    "460": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "461": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "462": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "464": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "ADD",
      "path": "0"
    },
    "465": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "467": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP3",
      "path": "0"
    },
    "468": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "MUL",
      "path": "0"
    },
    "469": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "470": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "471": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "DUP4",
      "path": "0"
    },
    "472": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "473": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "ADD",
      "path": "0"
    },
    "474": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2995,
        3037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "477": {
      "op": "POP"
    },
    "478": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2975,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3048,
        3062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "482": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3110,
        3122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "485": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3118,
        3122
      ],
      "op": "DUP5",
      "path": "0"
    },
    "486": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3110,
        3115
      ],
      "op": "DUP7",
      "path": "0"
    },
    "487": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3110,
        3122
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "490": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3110,
        3122
      ],
      "op": "JUMP",
      "path": "0"
    },
    "491": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3110,
        3122
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "498": {
      "op": "SHL"
    },
    "499": {
      "op": "SUB"
    },
    "500": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "DUP8",
      "path": "0"
    },
    "501": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "AND",
      "path": "0"
    },
    "502": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "504": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "505": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "DUP2",
      "path": "0"
    },
    "506": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "507": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3097
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "509": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "511": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "512": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "514": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "515": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "516": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "517": {
      "branch": 27,
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3080,
        3122
      ],
      "op": "GT",
      "path": "0"
    },
    "518": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3076,
        3237
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "519": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3076,
        3237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "522": {
      "branch": 27,
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3076,
        3237
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "523": {
      "op": "POP"
    },
    "524": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3147,
        3152
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 4
    },
    "525": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3076,
        3237
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x238"
    },
    "528": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3076,
        3237
      ],
      "op": "JUMP",
      "path": "0"
    },
    "529": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3076,
        3237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "DUP7",
      "path": "0",
      "statement": 5
    },
    "539": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "AND",
      "path": "0"
    },
    "540": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "542": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "543": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "DUP2",
      "path": "0"
    },
    "544": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "545": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "547": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "549": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "550": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "552": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "553": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "554": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3219
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "555": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "558": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "559": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3222,
        3226
      ],
      "op": "DUP6",
      "path": "0"
    },
    "560": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3222,
        3226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "561": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "564": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3192,
        3226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "565": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3192,
        3226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3183,
        3226
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "567": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3183,
        3226
      ],
      "op": "POP",
      "path": "0"
    },
    "568": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3076,
        3237
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "569": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3264,
        3268
      ],
      "op": "DUP4",
      "path": "0"
    },
    "570": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3274,
        3287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x244"
    },
    "574": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3281,
        3287
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3274,
        3278
      ],
      "op": "DUP7",
      "path": "0"
    },
    "576": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3274,
        3287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "579": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3274,
        3287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "580": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3274,
        3287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "581": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3270,
        3271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "582": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3270,
        3287
      ],
      "op": "LT",
      "path": "0"
    },
    "583": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "584": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38A"
    },
    "587": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "op": "SUB"
    },
    "596": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 6
    },
    "597": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "AND",
      "path": "0"
    },
    "598": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "600": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "601": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "602": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "603": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "605": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "607": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "608": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "DUP2",
      "path": "0"
    },
    "609": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "610": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "612": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "613": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "DUP4",
      "path": "0"
    },
    "614": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3351
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "615": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "DUP5",
      "path": "0"
    },
    "616": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "DUP5",
      "path": "0"
    },
    "617": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "619": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "620": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "621": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "622": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3327,
        3354
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "623": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "624": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "625": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279"
    },
    "628": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "629": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2F"
    },
    "632": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "633": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "634": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "635": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "637": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "638": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "640": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "641": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "642": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DIV",
      "path": "0"
    },
    "643": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MUL",
      "path": "0"
    },
    "644": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "646": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "647": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "649": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "650": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "651": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "652": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "653": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "655": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "656": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "657": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "658": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "659": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "660": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "661": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "662": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "663": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "665": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "666": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP3",
      "path": "0"
    },
    "667": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "668": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "669": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A5"
    },
    "672": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "673": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2F"
    },
    "676": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "677": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "678": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "679": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "680": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "683": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "684": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "685": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "687": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "LT",
      "path": "0"
    },
    "688": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C7"
    },
    "691": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "692": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "695": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "696": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP4",
      "path": "0"
    },
    "697": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "698": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DIV",
      "path": "0"
    },
    "699": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MUL",
      "path": "0"
    },
    "700": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP4",
      "path": "0"
    },
    "701": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "702": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "703": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "705": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "706": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "707": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "710": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "711": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "712": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP3",
      "path": "0"
    },
    "713": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "714": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "715": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "716": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "718": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "719": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "721": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "723": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "724": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "725": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "727": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "728": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP2",
      "path": "0"
    },
    "729": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "730": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "731": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "733": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "734": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "737": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "738": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "739": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP4",
      "path": "0"
    },
    "740": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "GT",
      "path": "0"
    },
    "741": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "744": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "745": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP3",
      "path": "0"
    },
    "746": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "747": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SUB",
      "path": "0"
    },
    "748": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "750": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "AND",
      "path": "0"
    },
    "751": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "DUP3",
      "path": "0"
    },
    "752": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "ADD",
      "path": "0"
    },
    "753": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "754": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "755": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "POP",
      "path": "0"
    },
    "756": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "POP",
      "path": "0"
    },
    "757": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "POP",
      "path": "0"
    },
    "758": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "POP",
      "path": "0"
    },
    "759": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "POP",
      "path": "0"
    },
    "760": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3321
      ],
      "op": "DUP5",
      "path": "0"
    },
    "761": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3322,
        3323
      ],
      "op": "DUP3",
      "path": "0"
    },
    "762": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "763": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "764": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "765": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "LT",
      "path": "0"
    },
    "766": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309"
    },
    "769": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "770": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x309"
    },
    "773": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6A"
    },
    "776": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3308,
        3324
      ],
      "op": "JUMP",
      "path": "0"
    },
    "777": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "778": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "780": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "781": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "782": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "MUL",
      "path": "0"
    },
    "783": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "784": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "785": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "786": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "ADD",
      "path": "0"
    },
    "787": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "DUP2",
      "path": "0"
    },
    "788": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3324
      ],
      "op": "ADD",
      "path": "0"
    },
    "789": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "790": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "791": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "792": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3308,
        3354
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "op": "SUB"
    },
    "801": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "DUP9",
      "path": "0",
      "statement": 7
    },
    "802": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "AND",
      "path": "0"
    },
    "803": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3403
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "805": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "806": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "807": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "808": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "809": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "810": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "813": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "DUP1",
      "path": "0"
    },
    "814": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "DUP3",
      "path": "0"
    },
    "815": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3413
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "816": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "818": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3455
      ],
      "op": "DUP5",
      "path": "0"
    },
    "819": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3455
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "820": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3455
      ],
      "op": "DUP2",
      "path": "0"
    },
    "821": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3455
      ],
      "op": "DUP4",
      "path": "0"
    },
    "822": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3455
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "823": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "DUP6",
      "path": "0"
    },
    "824": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "DUP5",
      "path": "0"
    },
    "825": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "826": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "828": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "829": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "830": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "831": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "832": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "833": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "834": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "835": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34C"
    },
    "838": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "839": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3431,
        3458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "840": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC80"
    },
    "843": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3391,
        3472
      ],
      "op": "JUMP",
      "path": "0"
    },
    "844": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "845": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "846": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "847": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "848": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "850": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "ADD",
      "path": "0"
    },
    "851": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "853": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "854": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "855": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "856": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "SUB",
      "path": "0"
    },
    "857": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "858": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "859": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3391,
        3472
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "860": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3385
      ],
      "op": "DUP4",
      "path": "0"
    },
    "861": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3386,
        3387
      ],
      "op": "DUP3",
      "path": "0"
    },
    "862": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "863": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "864": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "865": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "LT",
      "path": "0"
    },
    "866": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36D"
    },
    "869": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "870": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36D"
    },
    "873": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6A"
    },
    "876": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3368,
        3388
      ],
      "op": "JUMP",
      "path": "0"
    },
    "877": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "878": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "880": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "DUP2",
      "path": "0"
    },
    "882": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "MUL",
      "path": "0"
    },
    "883": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "884": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "885": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "886": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "ADD",
      "path": "0"
    },
    "887": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3388
      ],
      "op": "ADD",
      "path": "0"
    },
    "888": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3368,
        3472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "889": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "890": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x382"
    },
    "893": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "DUP2",
      "path": "0"
    },
    "894": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1C"
    },
    "897": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "i",
      "offset": [
        3289,
        3292
      ],
      "op": "JUMP",
      "path": "0"
    },
    "898": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "899": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "900": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "POP",
      "path": "0"
    },
    "901": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3289,
        3292
      ],
      "op": "POP",
      "path": "0"
    },
    "902": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "905": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "JUMP",
      "path": "0"
    },
    "906": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "907": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        3247,
        3483
      ],
      "op": "POP",
      "path": "0"
    },
    "908": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2869,
        3489
      ],
      "op": "POP",
      "path": "0"
    },
    "909": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "910": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "POP",
      "path": "0"
    },
    "911": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "912": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "913": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "POP",
      "path": "0"
    },
    "914": {
      "fn": "veAllocate.getTotalAllocation",
      "offset": [
        2612,
        3489
      ],
      "op": "POP",
      "path": "0"
    },
    "915": {
      "fn": "veAllocate.getTotalAllocation",
      "jump": "o",
      "offset": [
        2612,
        3489
      ],
      "op": "JUMP",
      "path": "0"
    },
    "916": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "917": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1200,
        1202
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x32"
    },
    "919": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1180,
        1202
      ],
      "op": "DUP2",
      "path": "0"
    },
    "920": {
      "branch": 28,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1180,
        1202
      ],
      "op": "LT",
      "path": "0"
    },
    "921": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D7"
    },
    "924": {
      "branch": 28,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "925": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "927": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "DUP2",
      "path": "0"
    },
    "936": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "939": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "941": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "DUP3",
      "path": "0"
    },
    "942": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "ADD",
      "path": "0"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "948": {
      "op": "DUP3"
    },
    "949": {
      "op": "ADD"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH11",
      "value": "0x496420746F6F206C6F6E67"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "968": {
      "op": "DUP3"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "op": "MSTORE"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "973": {
      "op": "ADD"
    },
    "974": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "975": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "977": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "978": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "DUP1",
      "path": "0"
    },
    "979": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "980": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "SUB",
      "path": "0"
    },
    "981": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "982": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "983": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1172,
        1218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "984": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1246,
        1250
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x3E8"
    },
    "987": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1236,
        1242
      ],
      "op": "DUP4",
      "path": "0"
    },
    "988": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1236,
        1250
      ],
      "op": "GT",
      "path": "0"
    },
    "989": {
      "branch": 29,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1236,
        1250
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "990": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40E"
    },
    "993": {
      "branch": 29,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "994": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "996": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1003": {
      "op": "SHL"
    },
    "1004": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1005": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1008": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1010": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1011": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "ADD",
      "path": "0"
    },
    "1012": {
      "op": "MSTORE"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1017": {
      "op": "DUP3"
    },
    "1018": {
      "op": "ADD"
    },
    "1019": {
      "op": "MSTORE"
    },
    "1020": {
      "op": "PUSH2",
      "value": "0x424D"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1025": {
      "op": "SHL"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1028": {
      "op": "DUP3"
    },
    "1029": {
      "op": "ADD"
    },
    "1030": {
      "op": "MSTORE"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1033": {
      "op": "ADD"
    },
    "1034": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "1037": {
      "op": "JUMP"
    },
    "1038": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1228,
        1257
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1039": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1285,
        1295
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1040": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1042": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1043": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1044": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1045": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1047": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1048": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1049": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1050": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1052": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1053": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1054": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1055": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1296
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1056": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1057": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1058": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42E"
    },
    "1061": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1062": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1297,
        1300
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1063": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1297,
        1300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1064": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1297,
        1300
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1065": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1297,
        1300
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1069": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1272,
        1301
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1070": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1071": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1072": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1073": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1074": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1076": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "ADD",
      "path": "0"
    },
    "1077": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1079": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1080": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1081": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1082": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "SUB",
      "path": "0"
    },
    "1083": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1084": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1085": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1301
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1086": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1305,
        1306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1088": {
      "branch": 30,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1272,
        1306
      ],
      "op": "EQ",
      "path": "0"
    },
    "1089": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1268,
        1557
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1090": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1268,
        1557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50A"
    },
    "1093": {
      "branch": 30,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1268,
        1557
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1094": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1339,
        1340
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x0"
    },
    "1096": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1330,
        1336
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1097": {
      "branch": 31,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1330,
        1340
      ],
      "op": "GT",
      "path": "0"
    },
    "1098": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "1101": {
      "branch": 31,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1102": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1104": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1113": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1116": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1118": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1119": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "ADD",
      "path": "0"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1125": {
      "op": "DUP3"
    },
    "1126": {
      "op": "ADD"
    },
    "1127": {
      "op": "MSTORE"
    },
    "1128": {
      "op": "PUSH2",
      "value": "0x534D"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1136": {
      "op": "DUP3"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "MSTORE"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1141": {
      "op": "ADD"
    },
    "1142": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "1145": {
      "op": "JUMP"
    },
    "1146": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1322,
        1347
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1147": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1376,
        1386
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 12
    },
    "1148": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1150": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1151": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1152": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1153": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1155": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1157": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1158": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1159": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1160": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1162": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1163": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1164": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1387
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1165": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1388,
        1405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1167": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1388,
        1417
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1168": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1388,
        1417
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1169": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1388,
        1417
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1170": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1388,
        1417
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1171": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1388,
        1417
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1172": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1388,
        1417
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1173": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1418
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1174": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1175": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1176": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1418
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1177": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1418
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1178": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1179": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1418
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1180": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "1183": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1421,
        1424
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1185": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1421,
        1424
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1186": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1424
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x849"
    },
    "1189": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1361,
        1424
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1361,
        1424
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1490,
        1500
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 13
    },
    "1193": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1195": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1198": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1489
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1200": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1202": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1203": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1204": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1205": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1207": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1208": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1209": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1210": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1211": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1213": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1214": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1215": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1216": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1217": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1218": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1219": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1220": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1221": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1222": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1223": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1472,
        1501
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1224": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1464
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1225": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D5"
    },
    "1228": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1229": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1465,
        1468
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1230": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1465,
        1468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1231": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1465,
        1468
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1232": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1465,
        1468
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1233": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1236": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1438,
        1469
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1237": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1238": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1239": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1240": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1241": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1243": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1244": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1245": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1247": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1248": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1249": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1250": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "SUB",
      "path": "0"
    },
    "1251": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1252": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "ADD",
      "path": "0"
    },
    "1253": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1254": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1469
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1255": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1501
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1256": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1501
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1257": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1501
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1258": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1438,
        1501
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1259": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1533,
        1543
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 14
    },
    "1260": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1262": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1265": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1267": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1268": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1269": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1270": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1271": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1272": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1544
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1273": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1274": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1275": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1276": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1279": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1280": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1C"
    },
    "1283": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1515,
        1546
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1284": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1286": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1287": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "POP",
      "path": "0"
    },
    "1288": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1289": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1515,
        1546
      ],
      "op": "POP",
      "path": "0"
    },
    "1290": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1268,
        1557
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1291": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1687,
        1697
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 15
    },
    "1292": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1294": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1295": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1296": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1297": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1299": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1300": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1301": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1302": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1304": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1306": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1307": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1698
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1308": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1309": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1310": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52A"
    },
    "1313": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1314": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1699,
        1702
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1315": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1699,
        1702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1316": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1699,
        1702
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1317": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1699,
        1702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1318": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1321": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1674,
        1703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1322": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1323": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1324": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1325": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1326": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1328": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1329": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1330": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1332": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1333": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1335": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SUB",
      "path": "0"
    },
    "1336": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1337": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "ADD",
      "path": "0"
    },
    "1338": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1339": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1340": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1674,
        1703
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1341": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1627,
        1637
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1342": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1344": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1345": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1346": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1347": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1349": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1350": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1351": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1352": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1353": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1354": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1638
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1355": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1659
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x555"
    },
    "1358": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1359": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1653,
        1659
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1360": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1653,
        1659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1361": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1659
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "1364": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1610,
        1659
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1365": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1659
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1366": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55F"
    },
    "1369": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1703
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1370": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1703
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1371": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "1374": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1610,
        1703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1375": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1610,
        1703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1376": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1584,
        1594
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1377": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1379": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1380": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1381": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1382": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1384": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1386": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1387": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1389": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1390": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1595
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1391": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1567,
        1703
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1392": {
      "branch": 32,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1718,
        1729
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1393": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1714,
        1847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x583"
    },
    "1396": {
      "branch": 32,
      "fn": "veAllocate.setAllocation",
      "offset": [
        1714,
        1847
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1397": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1745,
        1767
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0x57E"
    },
    "1400": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1763,
        1766
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1401": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1763,
        1766
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1402": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1745,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x608"
    },
    "1405": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1745,
        1767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1406": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1745,
        1767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1407": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1714,
        1847
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B7"
    },
    "1410": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1714,
        1847
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1411": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1714,
        1847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1412": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1811,
        1821
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 17
    },
    "1413": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1415": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1416": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1418": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1420": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1421": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1422": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1423": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1425": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1426": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1427": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1428": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1429": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1430": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1431": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1830,
        1836
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1432": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1830,
        1836
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1433": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1822
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1434": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A6"
    },
    "1437": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1438": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1823,
        1826
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1439": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1823,
        1826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1440": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1823,
        1826
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1441": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1823,
        1826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1442": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1445": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1798,
        1827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1446": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1447": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1448": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1449": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1450": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1452": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1453": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1454": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1455": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1456": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "SUB",
      "path": "0"
    },
    "1457": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1459": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "ADD",
      "path": "0"
    },
    "1460": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1461": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1827
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1462": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1798,
        1836
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1463": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1714,
        1847
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1464": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1887,
        1890
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 18
    },
    "1465": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1887,
        1890
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1466": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1468": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1469": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C7"
    },
    "1472": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1473": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1474": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1475": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1478": {
      "fn": "veAllocate.setAllocation",
      "jump": "i",
      "offset": [
        1861,
        1899
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1479": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1480": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1482": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1483": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1484": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1485": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1486": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SUB",
      "path": "0"
    },
    "1487": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1488": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1489": {
      "op": "DUP5"
    },
    "1490": {
      "op": "DUP3"
    },
    "1491": {
      "op": "MSTORE"
    },
    "1492": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1493": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1875,
        1885
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1494": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1875,
        1885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1495": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xD8C9A3D91A9712DECB6F475C889DD8AADC77AF5358DA88983B6D6A9E123CB26F"
    },
    "1528": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1531": {
      "op": "ADD"
    },
    "1532": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1534": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1535": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1536": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1537": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SUB",
      "path": "0"
    },
    "1538": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1539": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1861,
        1899
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1540": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "POP",
      "path": "0"
    },
    "1541": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "POP",
      "path": "0"
    },
    "1542": {
      "fn": "veAllocate.setAllocation",
      "offset": [
        1093,
        1906
      ],
      "op": "POP",
      "path": "0"
    },
    "1543": {
      "fn": "veAllocate.setAllocation",
      "jump": "o",
      "offset": [
        1093,
        1906
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1544": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1912,
        2606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1545": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2000,
        2010
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 19
    },
    "1546": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2019,
        2020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1548": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1549": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1550": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1551": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1553": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1554": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1555": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1556": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1558": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1559": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1560": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2011
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1561": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1562": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1563": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x627"
    },
    "1566": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1567": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2012,
        2015
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1568": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2012,
        2015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1569": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2012,
        2015
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1570": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2012,
        2015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1571": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1574": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        1987,
        2016
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1575": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1576": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1577": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1578": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1579": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1581": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "ADD",
      "path": "0"
    },
    "1582": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1584": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1585": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1586": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1587": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "SUB",
      "path": "0"
    },
    "1588": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1590": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2016
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1591": {
      "branch": 33,
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1987,
        2020
      ],
      "op": "GT",
      "path": "0"
    },
    "1592": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1595": {
      "branch": 33,
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1596": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1598": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1607": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1610": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1612": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1613": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "ADD",
      "path": "0"
    },
    "1614": {
      "op": "MSTORE"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1619": {
      "op": "DUP3"
    },
    "1620": {
      "op": "ADD"
    },
    "1621": {
      "op": "MSTORE"
    },
    "1622": {
      "op": "PUSH2",
      "value": "0x534D"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1630": {
      "op": "DUP3"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "1639": {
      "op": "JUMP"
    },
    "1640": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1979,
        2027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1641": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2051,
        2061
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "1642": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2070,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1644": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1645": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1646": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1647": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1649": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1650": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1651": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1652": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1654": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1655": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1656": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2062
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1657": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1658": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1659": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x687"
    },
    "1662": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1663": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2063,
        2066
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1664": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2063,
        2066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1665": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2063,
        2066
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1666": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2063,
        2066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1667": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1670": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2038,
        2067
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1671": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1672": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1673": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1674": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1675": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1677": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1678": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1679": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1680": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1681": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1682": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "SUB",
      "path": "0"
    },
    "1683": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1685": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1686": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1687": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "ADD",
      "path": "0"
    },
    "1688": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1689": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2067
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1690": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2071
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1691": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2071
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1692": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2071
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1693": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2038,
        2071
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1694": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2110,
        2120
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1695": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2082,
        2092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1697": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1698": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1699": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1700": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2109
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1702": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1703": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1704": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1705": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1706": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1707": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1708": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B8"
    },
    "1711": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1712": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2122,
        2125
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1713": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2122,
        2125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1714": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2122,
        2125
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1715": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2122,
        2125
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1716": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1719": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2095,
        2126
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1720": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1721": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1722": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1723": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1724": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1726": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1727": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1728": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1730": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1731": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1732": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1733": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SUB",
      "path": "0"
    },
    "1734": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1735": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "ADD",
      "path": "0"
    },
    "1736": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1737": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1738": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1739": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2185,
        2195
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 21
    },
    "1740": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1742": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1743": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1744": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1745": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1747": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1748": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1749": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1750": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1751": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1752": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2242,
        2243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1754": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1755": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1756": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1757": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1758": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1759": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1760": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1761": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2239
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1762": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1763": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2095,
        2126
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1764": {
      "op": "POP"
    },
    "1765": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1766": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2196
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1767": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EF"
    },
    "1770": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2243
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1771": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "1774": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2210,
        2243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1775": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2210,
        2243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1776": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1777": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1778": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1780": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1781": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1782": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "ADD",
      "path": "0"
    },
    "1783": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1784": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1785": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1786": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1787": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1789": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1790": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1791": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "ADD",
      "path": "0"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1794": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1796": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1797": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2152,
        2162
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1798": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2163
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1799": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1800": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2151
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1802": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2163
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1803": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2163
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1804": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2163
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1805": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2163
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1806": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2163
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1807": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1808": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1809": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1810": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1811": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1812": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1813": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1814": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1815": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1816": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1817": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2167
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1818": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2170,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1819": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1822": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC2F"
    },
    "1826": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2137,
        2253
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1827": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72E"
    },
    "1831": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1832": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1833": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1834": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CD"
    },
    "1837": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2137,
        2253
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1838": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2137,
        2253
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2305,
        2315
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 22
    },
    "1841": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1843": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1844": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1845": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1846": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2304
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1848": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1850": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1851": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1852": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1853": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1855": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1856": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1857": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2316
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1858": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1860": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2343
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1861": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2343
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1862": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1863": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2343
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1864": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2343
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1865": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1866": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1867": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1868": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1869": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1870": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1871": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1872": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1873": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1874": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2317,
        2347
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1875": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1876": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1877": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2351,
        2353
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1878": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2351,
        2353
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1879": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75F"
    },
    "1882": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1883": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC80"
    },
    "1886": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2290,
        2348
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1887": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1888": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1889": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1890": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1891": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1893": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1894": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1895": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1897": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1898": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1899": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1900": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "SUB",
      "path": "0"
    },
    "1901": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1902": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "ADD",
      "path": "0"
    },
    "1903": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2348
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1905": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2353
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1906": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2353
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1907": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2353
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1908": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2290,
        2353
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1909": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2413,
        2423
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 23
    },
    "1910": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1912": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1913": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1914": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1915": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1917": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1918": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1919": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1920": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1921": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1922": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2457,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1924": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1925": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1926": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1927": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1928": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1929": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1930": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1931": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2454
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1932": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1933": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2424
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1934": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x796"
    },
    "1937": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2458
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1938": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2458
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC18"
    },
    "1941": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2425,
        2458
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1942": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2425,
        2458
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1943": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1944": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1945": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1947": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "ADD",
      "path": "0"
    },
    "1948": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1949": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1950": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1951": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1953": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "ADD",
      "path": "0"
    },
    "1954": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1956": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1957": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2398,
        2459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1959": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2391,
        2459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B0"
    },
    "1962": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2391,
        2459
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1963": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2391,
        2459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1964": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2391,
        2459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x948"
    },
    "1967": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2391,
        2459
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1968": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2391,
        2459
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1969": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2491,
        2501
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 24
    },
    "1970": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1972": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1973": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1974": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1975": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1977": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1979": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1980": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1982": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1983": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1984": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1985": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2502
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1986": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1987": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1988": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D0"
    },
    "1991": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1992": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2503,
        2506
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1993": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2503,
        2506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1994": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2503,
        2506
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1995": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2503,
        2506
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1996": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "1999": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2476,
        2507
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2000": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2001": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2002": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2003": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2004": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2006": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2007": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2008": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2010": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2011": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2012": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2013": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "SUB",
      "path": "0"
    },
    "2014": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2015": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "ADD",
      "path": "0"
    },
    "2016": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2017": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2476,
        2507
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2018": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2469,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2020": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2469,
        2507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2021": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2469,
        2507
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2022": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2469,
        2507
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2023": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2469,
        2507
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2024": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2536,
        2546
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 25
    },
    "2025": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2547
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2026": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2547
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2027": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2029": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2547
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2030": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2547
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2031": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2547
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2032": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2547
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2033": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2547
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2034": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2035": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2036": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2037": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FD"
    },
    "2040": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2041": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD37"
    },
    "2044": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2518,
        2549
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2045": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2046": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2047": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2048": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "POP",
      "path": "0"
    },
    "2049": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2050": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2518,
        2549
      ],
      "op": "POP",
      "path": "0"
    },
    "2051": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2595,
        2598
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 26
    },
    "2052": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2595,
        2598
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2053": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2055": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2056": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x812"
    },
    "2059": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2060": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2061": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2062": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC4"
    },
    "2065": {
      "fn": "veAllocate._removeAllocation",
      "jump": "i",
      "offset": [
        2565,
        2599
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2066": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2067": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2069": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2070": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2071": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2072": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2073": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SUB",
      "path": "0"
    },
    "2074": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2075": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2076": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2077": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2583,
        2593
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2078": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2583,
        2593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2079": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDFFF661E3EDA1013045F8E1890C5BA777ACB75CA06008312FE62ABB41567A1BD"
    },
    "2112": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2113": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2115": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2116": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        2565,
        2599
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2117": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1969,
        2606
      ],
      "op": "POP",
      "path": "0"
    },
    "2118": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1912,
        2606
      ],
      "op": "POP",
      "path": "0"
    },
    "2119": {
      "fn": "veAllocate._removeAllocation",
      "offset": [
        1912,
        2606
      ],
      "op": "POP",
      "path": "0"
    },
    "2120": {
      "fn": "veAllocate._removeAllocation",
      "jump": "o",
      "offset": [
        1912,
        2606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2121": {
      "op": "JUMPDEST"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "DUP1"
    },
    "2124": {
      "op": "SLOAD"
    },
    "2125": {
      "op": "PUSH2",
      "value": "0x855"
    },
    "2128": {
      "op": "SWAP1"
    },
    "2129": {
      "op": "PUSH2",
      "value": "0xC2F"
    },
    "2132": {
      "jump": "i",
      "op": "JUMP"
    },
    "2133": {
      "op": "JUMPDEST"
    },
    "2134": {
      "op": "SWAP1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2137": {
      "op": "MSTORE"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2142": {
      "op": "KECCAK256"
    },
    "2143": {
      "op": "SWAP1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2146": {
      "op": "ADD"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2149": {
      "op": "SWAP1"
    },
    "2150": {
      "op": "DIV"
    },
    "2151": {
      "op": "DUP2"
    },
    "2152": {
      "op": "ADD"
    },
    "2153": {
      "op": "SWAP3"
    },
    "2154": {
      "op": "DUP3"
    },
    "2155": {
      "op": "PUSH2",
      "value": "0x877"
    },
    "2158": {
      "op": "JUMPI"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2161": {
      "op": "DUP6"
    },
    "2162": {
      "op": "SSTORE"
    },
    "2163": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2166": {
      "op": "JUMP"
    },
    "2167": {
      "op": "JUMPDEST"
    },
    "2168": {
      "op": "DUP3"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2171": {
      "op": "LT"
    },
    "2172": {
      "op": "PUSH2",
      "value": "0x890"
    },
    "2175": {
      "op": "JUMPI"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "DUP1"
    },
    "2178": {
      "op": "ADD"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2181": {
      "op": "NOT"
    },
    "2182": {
      "op": "DUP3"
    },
    "2183": {
      "op": "CALLDATALOAD"
    },
    "2184": {
      "op": "AND"
    },
    "2185": {
      "op": "OR"
    },
    "2186": {
      "op": "DUP6"
    },
    "2187": {
      "op": "SSTORE"
    },
    "2188": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2191": {
      "op": "JUMP"
    },
    "2192": {
      "op": "JUMPDEST"
    },
    "2193": {
      "op": "DUP3"
    },
    "2194": {
      "op": "DUP1"
    },
    "2195": {
      "op": "ADD"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "ADD"
    },
    "2199": {
      "op": "DUP6"
    },
    "2200": {
      "op": "SSTORE"
    },
    "2201": {
      "op": "DUP3"
    },
    "2202": {
      "op": "ISZERO"
    },
    "2203": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2206": {
      "op": "JUMPI"
    },
    "2207": {
      "op": "SWAP2"
    },
    "2208": {
      "op": "DUP3"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "JUMPDEST"
    },
    "2211": {
      "op": "DUP3"
    },
    "2212": {
      "op": "DUP2"
    },
    "2213": {
      "op": "GT"
    },
    "2214": {
      "op": "ISZERO"
    },
    "2215": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2218": {
      "op": "JUMPI"
    },
    "2219": {
      "op": "DUP3"
    },
    "2220": {
      "op": "CALLDATALOAD"
    },
    "2221": {
      "op": "DUP3"
    },
    "2222": {
      "op": "SSTORE"
    },
    "2223": {
      "op": "SWAP2"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "SWAP2"
    },
    "2228": {
      "op": "SWAP1"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "SWAP1"
    },
    "2233": {
      "op": "PUSH2",
      "value": "0x8A2"
    },
    "2236": {
      "op": "JUMP"
    },
    "2237": {
      "op": "JUMPDEST"
    },
    "2238": {
      "op": "POP"
    },
    "2239": {
      "op": "PUSH2",
      "value": "0x8C9"
    },
    "2242": {
      "op": "SWAP3"
    },
    "2243": {
      "op": "SWAP2"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "op": "PUSH2",
      "value": "0x985"
    },
    "2248": {
      "jump": "i",
      "op": "JUMP"
    },
    "2249": {
      "op": "JUMPDEST"
    },
    "2250": {
      "op": "POP"
    },
    "2251": {
      "op": "SWAP1"
    },
    "2252": {
      "jump": "o",
      "op": "JUMP"
    },
    "2253": {
      "op": "JUMPDEST"
    },
    "2254": {
      "op": "DUP3"
    },
    "2255": {
      "op": "DUP1"
    },
    "2256": {
      "op": "SLOAD"
    },
    "2257": {
      "op": "PUSH2",
      "value": "0x8D9"
    },
    "2260": {
      "op": "SWAP1"
    },
    "2261": {
      "op": "PUSH2",
      "value": "0xC2F"
    },
    "2264": {
      "jump": "i",
      "op": "JUMP"
    },
    "2265": {
      "op": "JUMPDEST"
    },
    "2266": {
      "op": "SWAP1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2274": {
      "op": "KECCAK256"
    },
    "2275": {
      "op": "SWAP1"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2278": {
      "op": "ADD"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2281": {
      "op": "SWAP1"
    },
    "2282": {
      "op": "DIV"
    },
    "2283": {
      "op": "DUP2"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "SWAP3"
    },
    "2286": {
      "op": "DUP3"
    },
    "2287": {
      "op": "PUSH2",
      "value": "0x8FB"
    },
    "2290": {
      "op": "JUMPI"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2293": {
      "op": "DUP6"
    },
    "2294": {
      "op": "SSTORE"
    },
    "2295": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2298": {
      "op": "JUMP"
    },
    "2299": {
      "op": "JUMPDEST"
    },
    "2300": {
      "op": "DUP3"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2303": {
      "op": "LT"
    },
    "2304": {
      "op": "PUSH2",
      "value": "0x90C"
    },
    "2307": {
      "op": "JUMPI"
    },
    "2308": {
      "op": "DUP1"
    },
    "2309": {
      "op": "SLOAD"
    },
    "2310": {
      "op": "DUP6"
    },
    "2311": {
      "op": "SSTORE"
    },
    "2312": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2315": {
      "op": "JUMP"
    },
    "2316": {
      "op": "JUMPDEST"
    },
    "2317": {
      "op": "DUP3"
    },
    "2318": {
      "op": "DUP1"
    },
    "2319": {
      "op": "ADD"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "op": "DUP6"
    },
    "2324": {
      "op": "SSTORE"
    },
    "2325": {
      "op": "DUP3"
    },
    "2326": {
      "op": "ISZERO"
    },
    "2327": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2330": {
      "op": "JUMPI"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2333": {
      "op": "MSTORE"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2338": {
      "op": "KECCAK256"
    },
    "2339": {
      "op": "SWAP2"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2345": {
      "op": "SWAP1"
    },
    "2346": {
      "op": "DIV"
    },
    "2347": {
      "op": "DUP3"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "op": "JUMPDEST"
    },
    "2350": {
      "op": "DUP3"
    },
    "2351": {
      "op": "DUP2"
    },
    "2352": {
      "op": "GT"
    },
    "2353": {
      "op": "ISZERO"
    },
    "2354": {
      "op": "PUSH2",
      "value": "0x8BD"
    },
    "2357": {
      "op": "JUMPI"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "SLOAD"
    },
    "2360": {
      "op": "DUP3"
    },
    "2361": {
      "op": "SSTORE"
    },
    "2362": {
      "op": "SWAP2"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2365": {
      "op": "ADD"
    },
    "2366": {
      "op": "SWAP2"
    },
    "2367": {
      "op": "SWAP1"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2370": {
      "op": "ADD"
    },
    "2371": {
      "op": "SWAP1"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x92D"
    },
    "2375": {
      "op": "JUMP"
    },
    "2376": {
      "op": "JUMPDEST"
    },
    "2377": {
      "op": "POP"
    },
    "2378": {
      "op": "DUP1"
    },
    "2379": {
      "op": "SLOAD"
    },
    "2380": {
      "op": "PUSH2",
      "value": "0x954"
    },
    "2383": {
      "op": "SWAP1"
    },
    "2384": {
      "op": "PUSH2",
      "value": "0xC2F"
    },
    "2387": {
      "jump": "i",
      "op": "JUMP"
    },
    "2388": {
      "op": "JUMPDEST"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2391": {
      "op": "DUP3"
    },
    "2392": {
      "op": "SSTORE"
    },
    "2393": {
      "op": "DUP1"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2396": {
      "op": "LT"
    },
    "2397": {
      "op": "PUSH2",
      "value": "0x964"
    },
    "2400": {
      "op": "JUMPI"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "op": "POP"
    },
    "2403": {
      "jump": "o",
      "op": "JUMP"
    },
    "2404": {
      "op": "JUMPDEST"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2407": {
      "op": "ADD"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2410": {
      "op": "SWAP1"
    },
    "2411": {
      "op": "DIV"
    },
    "2412": {
      "op": "SWAP1"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2415": {
      "op": "MSTORE"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2420": {
      "op": "KECCAK256"
    },
    "2421": {
      "op": "SWAP1"
    },
    "2422": {
      "op": "DUP2"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "SWAP1"
    },
    "2425": {
      "op": "PUSH2",
      "value": "0x982"
    },
    "2428": {
      "op": "SWAP2"
    },
    "2429": {
      "op": "SWAP1"
    },
    "2430": {
      "op": "PUSH2",
      "value": "0x985"
    },
    "2433": {
      "jump": "i",
      "op": "JUMP"
    },
    "2434": {
      "op": "JUMPDEST"
    },
    "2435": {
      "op": "POP"
    },
    "2436": {
      "jump": "o",
      "op": "JUMP"
    },
    "2437": {
      "op": "JUMPDEST"
    },
    "2438": {
      "op": "JUMPDEST"
    },
    "2439": {
      "op": "DUP1"
    },
    "2440": {
      "op": "DUP3"
    },
    "2441": {
      "op": "GT"
    },
    "2442": {
      "op": "ISZERO"
    },
    "2443": {
      "op": "PUSH2",
      "value": "0x8C9"
    },
    "2446": {
      "op": "JUMPI"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2449": {
      "op": "DUP2"
    },
    "2450": {
      "op": "SSTORE"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "ADD"
    },
    "2454": {
      "op": "PUSH2",
      "value": "0x986"
    },
    "2457": {
      "op": "JUMP"
    },
    "2458": {
      "op": "JUMPDEST"
    },
    "2459": {
      "op": "DUP1"
    },
    "2460": {
      "op": "CALLDATALOAD"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2465": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2467": {
      "op": "SHL"
    },
    "2468": {
      "op": "SUB"
    },
    "2469": {
      "op": "DUP2"
    },
    "2470": {
      "op": "AND"
    },
    "2471": {
      "op": "DUP2"
    },
    "2472": {
      "op": "EQ"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x9B1"
    },
    "2476": {
      "op": "JUMPI"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2479": {
      "op": "DUP1"
    },
    "2480": {
      "op": "REVERT"
    },
    "2481": {
      "op": "JUMPDEST"
    },
    "2482": {
      "op": "SWAP2"
    },
    "2483": {
      "op": "SWAP1"
    },
    "2484": {
      "op": "POP"
    },
    "2485": {
      "jump": "o",
      "op": "JUMP"
    },
    "2486": {
      "op": "JUMPDEST"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2489": {
      "op": "DUP1"
    },
    "2490": {
      "op": "DUP4"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2493": {
      "op": "DUP5"
    },
    "2494": {
      "op": "ADD"
    },
    "2495": {
      "op": "SLT"
    },
    "2496": {
      "op": "PUSH2",
      "value": "0x9C8"
    },
    "2499": {
      "op": "JUMPI"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2502": {
      "op": "DUP1"
    },
    "2503": {
      "op": "REVERT"
    },
    "2504": {
      "op": "JUMPDEST"
    },
    "2505": {
      "op": "POP"
    },
    "2506": {
      "op": "DUP2"
    },
    "2507": {
      "op": "CALLDATALOAD"
    },
    "2508": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2517": {
      "op": "DUP2"
    },
    "2518": {
      "op": "GT"
    },
    "2519": {
      "op": "ISZERO"
    },
    "2520": {
      "op": "PUSH2",
      "value": "0x9E0"
    },
    "2523": {
      "op": "JUMPI"
    },
    "2524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2526": {
      "op": "DUP1"
    },
    "2527": {
      "op": "REVERT"
    },
    "2528": {
      "op": "JUMPDEST"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2531": {
      "op": "DUP4"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "SWAP2"
    },
    "2534": {
      "op": "POP"
    },
    "2535": {
      "op": "DUP4"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "op": "DUP3"
    },
    "2539": {
      "op": "DUP6"
    },
    "2540": {
      "op": "ADD"
    },
    "2541": {
      "op": "ADD"
    },
    "2542": {
      "op": "GT"
    },
    "2543": {
      "op": "ISZERO"
    },
    "2544": {
      "op": "PUSH2",
      "value": "0x9F8"
    },
    "2547": {
      "op": "JUMPI"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2550": {
      "op": "DUP1"
    },
    "2551": {
      "op": "REVERT"
    },
    "2552": {
      "op": "JUMPDEST"
    },
    "2553": {
      "op": "SWAP3"
    },
    "2554": {
      "op": "POP"
    },
    "2555": {
      "op": "SWAP3"
    },
    "2556": {
      "op": "SWAP1"
    },
    "2557": {
      "op": "POP"
    },
    "2558": {
      "jump": "o",
      "op": "JUMP"
    },
    "2559": {
      "op": "JUMPDEST"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2562": {
      "op": "DUP1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2567": {
      "op": "DUP5"
    },
    "2568": {
      "op": "DUP7"
    },
    "2569": {
      "op": "SUB"
    },
    "2570": {
      "op": "SLT"
    },
    "2571": {
      "op": "ISZERO"
    },
    "2572": {
      "op": "PUSH2",
      "value": "0xA14"
    },
    "2575": {
      "op": "JUMPI"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2578": {
      "op": "DUP1"
    },
    "2579": {
      "op": "REVERT"
    },
    "2580": {
      "op": "JUMPDEST"
    },
    "2581": {
      "op": "PUSH2",
      "value": "0xA1D"
    },
    "2584": {
      "op": "DUP5"
    },
    "2585": {
      "op": "PUSH2",
      "value": "0x99A"
    },
    "2588": {
      "jump": "i",
      "op": "JUMP"
    },
    "2589": {
      "op": "JUMPDEST"
    },
    "2590": {
      "op": "SWAP3"
    },
    "2591": {
      "op": "POP"
    },
    "2592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2594": {
      "op": "DUP5"
    },
    "2595": {
      "op": "ADD"
    },
    "2596": {
      "op": "CALLDATALOAD"
    },
    "2597": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2606": {
      "op": "DUP2"
    },
    "2607": {
      "op": "GT"
    },
    "2608": {
      "op": "ISZERO"
    },
    "2609": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2612": {
      "op": "JUMPI"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2615": {
      "op": "DUP1"
    },
    "2616": {
      "op": "REVERT"
    },
    "2617": {
      "op": "JUMPDEST"
    },
    "2618": {
      "op": "PUSH2",
      "value": "0xA45"
    },
    "2621": {
      "op": "DUP7"
    },
    "2622": {
      "op": "DUP3"
    },
    "2623": {
      "op": "DUP8"
    },
    "2624": {
      "op": "ADD"
    },
    "2625": {
      "op": "PUSH2",
      "value": "0x9B6"
    },
    "2628": {
      "jump": "i",
      "op": "JUMP"
    },
    "2629": {
      "op": "JUMPDEST"
    },
    "2630": {
      "op": "SWAP5"
    },
    "2631": {
      "op": "SWAP8"
    },
    "2632": {
      "op": "SWAP1"
    },
    "2633": {
      "op": "SWAP7"
    },
    "2634": {
      "op": "POP"
    },
    "2635": {
      "op": "SWAP4"
    },
    "2636": {
      "op": "SWAP5"
    },
    "2637": {
      "op": "POP"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "op": "POP"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "jump": "o",
      "op": "JUMP"
    },
    "2642": {
      "op": "JUMPDEST"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2645": {
      "op": "DUP1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2650": {
      "op": "DUP5"
    },
    "2651": {
      "op": "DUP7"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "op": "SLT"
    },
    "2654": {
      "op": "ISZERO"
    },
    "2655": {
      "op": "PUSH2",
      "value": "0xA67"
    },
    "2658": {
      "op": "JUMPI"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2661": {
      "op": "DUP1"
    },
    "2662": {
      "op": "REVERT"
    },
    "2663": {
      "op": "JUMPDEST"
    },
    "2664": {
      "op": "PUSH2",
      "value": "0xA70"
    },
    "2667": {
      "op": "DUP5"
    },
    "2668": {
      "op": "PUSH2",
      "value": "0x99A"
    },
    "2671": {
      "jump": "i",
      "op": "JUMP"
    },
    "2672": {
      "op": "JUMPDEST"
    },
    "2673": {
      "op": "SWAP6"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2676": {
      "op": "DUP6"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "op": "CALLDATALOAD"
    },
    "2679": {
      "op": "SWAP6"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2683": {
      "op": "SWAP1"
    },
    "2684": {
      "op": "SWAP5"
    },
    "2685": {
      "op": "ADD"
    },
    "2686": {
      "op": "CALLDATALOAD"
    },
    "2687": {
      "op": "SWAP4"
    },
    "2688": {
      "op": "SWAP3"
    },
    "2689": {
      "op": "POP"
    },
    "2690": {
      "op": "POP"
    },
    "2691": {
      "op": "POP"
    },
    "2692": {
      "jump": "o",
      "op": "JUMP"
    },
    "2693": {
      "op": "JUMPDEST"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2696": {
      "op": "DUP2"
    },
    "2697": {
      "op": "MLOAD"
    },
    "2698": {
      "op": "DUP1"
    },
    "2699": {
      "op": "DUP5"
    },
    "2700": {
      "op": "MSTORE"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2703": {
      "op": "DUP1"
    },
    "2704": {
      "op": "DUP6"
    },
    "2705": {
      "op": "ADD"
    },
    "2706": {
      "op": "SWAP5"
    },
    "2707": {
      "op": "POP"
    },
    "2708": {
      "op": "DUP1"
    },
    "2709": {
      "op": "DUP5"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "DUP4"
    },
    "2715": {
      "op": "DUP2"
    },
    "2716": {
      "op": "LT"
    },
    "2717": {
      "op": "ISZERO"
    },
    "2718": {
      "op": "PUSH2",
      "value": "0xAB5"
    },
    "2721": {
      "op": "JUMPI"
    },
    "2722": {
      "op": "DUP2"
    },
    "2723": {
      "op": "MLOAD"
    },
    "2724": {
      "op": "DUP8"
    },
    "2725": {
      "op": "MSTORE"
    },
    "2726": {
      "op": "SWAP6"
    },
    "2727": {
      "op": "DUP3"
    },
    "2728": {
      "op": "ADD"
    },
    "2729": {
      "op": "SWAP6"
    },
    "2730": {
      "op": "SWAP1"
    },
    "2731": {
      "op": "DUP3"
    },
    "2732": {
      "op": "ADD"
    },
    "2733": {
      "op": "SWAP1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "ADD"
    },
    "2737": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "2740": {
      "op": "JUMP"
    },
    "2741": {
      "op": "JUMPDEST"
    },
    "2742": {
      "op": "POP"
    },
    "2743": {
      "op": "SWAP5"
    },
    "2744": {
      "op": "SWAP6"
    },
    "2745": {
      "op": "SWAP5"
    },
    "2746": {
      "op": "POP"
    },
    "2747": {
      "op": "POP"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "op": "POP"
    },
    "2751": {
      "jump": "o",
      "op": "JUMP"
    },
    "2752": {
      "op": "JUMPDEST"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2757": {
      "op": "DUP3"
    },
    "2758": {
      "op": "ADD"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2761": {
      "op": "DUP4"
    },
    "2762": {
      "op": "MSTORE"
    },
    "2763": {
      "op": "DUP1"
    },
    "2764": {
      "op": "DUP6"
    },
    "2765": {
      "op": "MLOAD"
    },
    "2766": {
      "op": "DUP1"
    },
    "2767": {
      "op": "DUP4"
    },
    "2768": {
      "op": "MSTORE"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2771": {
      "op": "DUP6"
    },
    "2772": {
      "op": "ADD"
    },
    "2773": {
      "op": "SWAP2"
    },
    "2774": {
      "op": "POP"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2777": {
      "op": "DUP2"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "DUP7"
    },
    "2782": {
      "op": "ADD"
    },
    "2783": {
      "op": "ADD"
    },
    "2784": {
      "op": "SWAP3"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2788": {
      "op": "DUP1"
    },
    "2789": {
      "op": "DUP9"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2793": {
      "op": "DUP1"
    },
    "2794": {
      "op": "JUMPDEST"
    },
    "2795": {
      "op": "DUP5"
    },
    "2796": {
      "op": "DUP2"
    },
    "2797": {
      "op": "LT"
    },
    "2798": {
      "op": "ISZERO"
    },
    "2799": {
      "op": "PUSH2",
      "value": "0xB4F"
    },
    "2802": {
      "op": "JUMPI"
    },
    "2803": {
      "op": "DUP9"
    },
    "2804": {
      "op": "DUP8"
    },
    "2805": {
      "op": "SUB"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "2808": {
      "op": "NOT"
    },
    "2809": {
      "op": "ADD"
    },
    "2810": {
      "op": "DUP7"
    },
    "2811": {
      "op": "MSTORE"
    },
    "2812": {
      "op": "DUP3"
    },
    "2813": {
      "op": "MLOAD"
    },
    "2814": {
      "op": "DUP1"
    },
    "2815": {
      "op": "MLOAD"
    },
    "2816": {
      "op": "DUP1"
    },
    "2817": {
      "op": "DUP10"
    },
    "2818": {
      "op": "MSTORE"
    },
    "2819": {
      "op": "DUP4"
    },
    "2820": {
      "op": "JUMPDEST"
    },
    "2821": {
      "op": "DUP2"
    },
    "2822": {
      "op": "DUP2"
    },
    "2823": {
      "op": "LT"
    },
    "2824": {
      "op": "ISZERO"
    },
    "2825": {
      "op": "PUSH2",
      "value": "0xB1F"
    },
    "2828": {
      "op": "JUMPI"
    },
    "2829": {
      "op": "DUP3"
    },
    "2830": {
      "op": "DUP2"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "op": "DUP8"
    },
    "2833": {
      "op": "ADD"
    },
    "2834": {
      "op": "MLOAD"
    },
    "2835": {
      "op": "DUP11"
    },
    "2836": {
      "op": "DUP3"
    },
    "2837": {
      "op": "ADD"
    },
    "2838": {
      "op": "DUP9"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "op": "MSTORE"
    },
    "2841": {
      "op": "DUP7"
    },
    "2842": {
      "op": "ADD"
    },
    "2843": {
      "op": "PUSH2",
      "value": "0xB04"
    },
    "2846": {
      "op": "JUMP"
    },
    "2847": {
      "op": "JUMPDEST"
    },
    "2848": {
      "op": "DUP2"
    },
    "2849": {
      "op": "DUP2"
    },
    "2850": {
      "op": "GT"
    },
    "2851": {
      "op": "ISZERO"
    },
    "2852": {
      "op": "PUSH2",
      "value": "0xB2F"
    },
    "2855": {
      "op": "JUMPI"
    },
    "2856": {
      "op": "DUP5"
    },
    "2857": {
      "op": "DUP8"
    },
    "2858": {
      "op": "DUP4"
    },
    "2859": {
      "op": "DUP13"
    },
    "2860": {
      "op": "ADD"
    },
    "2861": {
      "op": "ADD"
    },
    "2862": {
      "op": "MSTORE"
    },
    "2863": {
      "op": "JUMPDEST"
    },
    "2864": {
      "op": "POP"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2870": {
      "op": "NOT"
    },
    "2871": {
      "op": "AND"
    },
    "2872": {
      "op": "SWAP8"
    },
    "2873": {
      "op": "SWAP1"
    },
    "2874": {
      "op": "SWAP8"
    },
    "2875": {
      "op": "ADD"
    },
    "2876": {
      "op": "DUP5"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "op": "SWAP7"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "op": "SWAP5"
    },
    "2881": {
      "op": "DUP4"
    },
    "2882": {
      "op": "ADD"
    },
    "2883": {
      "op": "SWAP5"
    },
    "2884": {
      "op": "SWAP2"
    },
    "2885": {
      "op": "DUP4"
    },
    "2886": {
      "op": "ADD"
    },
    "2887": {
      "op": "SWAP2"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "ADD"
    },
    "2891": {
      "op": "PUSH2",
      "value": "0xAEA"
    },
    "2894": {
      "op": "JUMP"
    },
    "2895": {
      "op": "JUMPDEST"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "op": "POP"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "op": "DUP6"
    },
    "2900": {
      "op": "DUP5"
    },
    "2901": {
      "op": "SUB"
    },
    "2902": {
      "op": "DUP2"
    },
    "2903": {
      "op": "DUP8"
    },
    "2904": {
      "op": "ADD"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "op": "POP"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "PUSH2",
      "value": "0xB66"
    },
    "2912": {
      "op": "DUP2"
    },
    "2913": {
      "op": "DUP6"
    },
    "2914": {
      "op": "PUSH2",
      "value": "0xA85"
    },
    "2917": {
      "jump": "i",
      "op": "JUMP"
    },
    "2918": {
      "op": "JUMPDEST"
    },
    "2919": {
      "op": "SWAP6"
    },
    "2920": {
      "op": "SWAP5"
    },
    "2921": {
      "op": "POP"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "op": "POP"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "jump": "o",
      "op": "JUMP"
    },
    "2927": {
      "op": "JUMPDEST"
    },
    "2928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2930": {
      "op": "DUP1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2935": {
      "op": "DUP5"
    },
    "2936": {
      "op": "DUP7"
    },
    "2937": {
      "op": "SUB"
    },
    "2938": {
      "op": "SLT"
    },
    "2939": {
      "op": "ISZERO"
    },
    "2940": {
      "op": "PUSH2",
      "value": "0xB84"
    },
    "2943": {
      "op": "JUMPI"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2946": {
      "op": "DUP1"
    },
    "2947": {
      "op": "REVERT"
    },
    "2948": {
      "op": "JUMPDEST"
    },
    "2949": {
      "op": "DUP4"
    },
    "2950": {
      "op": "CALLDATALOAD"
    },
    "2951": {
      "op": "SWAP3"
    },
    "2952": {
      "op": "POP"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2955": {
      "op": "DUP5"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "op": "CALLDATALOAD"
    },
    "2958": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2967": {
      "op": "DUP2"
    },
    "2968": {
      "op": "GT"
    },
    "2969": {
      "op": "ISZERO"
    },
    "2970": {
      "op": "PUSH2",
      "value": "0xA39"
    },
    "2973": {
      "op": "JUMPI"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2976": {
      "op": "DUP1"
    },
    "2977": {
      "op": "REVERT"
    },
    "2978": {
      "op": "JUMPDEST"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2983": {
      "op": "DUP3"
    },
    "2984": {
      "op": "DUP5"
    },
    "2985": {
      "op": "SUB"
    },
    "2986": {
      "op": "SLT"
    },
    "2987": {
      "op": "ISZERO"
    },
    "2988": {
      "op": "PUSH2",
      "value": "0xBB4"
    },
    "2991": {
      "op": "JUMPI"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2994": {
      "op": "DUP1"
    },
    "2995": {
      "op": "REVERT"
    },
    "2996": {
      "op": "JUMPDEST"
    },
    "2997": {
      "op": "PUSH2",
      "value": "0xBBD"
    },
    "3000": {
      "op": "DUP3"
    },
    "3001": {
      "op": "PUSH2",
      "value": "0x99A"
    },
    "3004": {
      "jump": "i",
      "op": "JUMP"
    },
    "3005": {
      "op": "JUMPDEST"
    },
    "3006": {
      "op": "SWAP4"
    },
    "3007": {
      "op": "SWAP3"
    },
    "3008": {
      "op": "POP"
    },
    "3009": {
      "op": "POP"
    },
    "3010": {
      "op": "POP"
    },
    "3011": {
      "jump": "o",
      "op": "JUMP"
    },
    "3012": {
      "op": "JUMPDEST"
    },
    "3013": {
      "op": "DUP2"
    },
    "3014": {
      "op": "DUP4"
    },
    "3015": {
      "op": "DUP3"
    },
    "3016": {
      "op": "CALLDATACOPY"
    },
    "3017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3019": {
      "op": "SWAP2"
    },
    "3020": {
      "op": "ADD"
    },
    "3021": {
      "op": "SWAP1"
    },
    "3022": {
      "op": "DUP2"
    },
    "3023": {
      "op": "MSTORE"
    },
    "3024": {
      "op": "SWAP2"
    },
    "3025": {
      "op": "SWAP1"
    },
    "3026": {
      "op": "POP"
    },
    "3027": {
      "jump": "o",
      "op": "JUMP"
    },
    "3028": {
      "op": "JUMPDEST"
    },
    "3029": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3036": {
      "op": "SHL"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3039": {
      "op": "MSTORE"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3044": {
      "op": "MSTORE"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3049": {
      "op": "REVERT"
    },
    "3050": {
      "op": "JUMPDEST"
    },
    "3051": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3061": {
      "op": "MSTORE"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3066": {
      "op": "MSTORE"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3071": {
      "op": "REVERT"
    },
    "3072": {
      "op": "JUMPDEST"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3075": {
      "op": "DUP3"
    },
    "3076": {
      "op": "NOT"
    },
    "3077": {
      "op": "DUP3"
    },
    "3078": {
      "op": "GT"
    },
    "3079": {
      "op": "ISZERO"
    },
    "3080": {
      "op": "PUSH2",
      "value": "0xC13"
    },
    "3083": {
      "op": "JUMPI"
    },
    "3084": {
      "op": "PUSH2",
      "value": "0xC13"
    },
    "3087": {
      "op": "PUSH2",
      "value": "0xBEA"
    },
    "3090": {
      "jump": "i",
      "op": "JUMP"
    },
    "3091": {
      "op": "JUMPDEST"
    },
    "3092": {
      "op": "POP"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "SWAP1"
    },
    "3095": {
      "jump": "o",
      "op": "JUMP"
    },
    "3096": {
      "op": "JUMPDEST"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "DUP3"
    },
    "3101": {
      "op": "LT"
    },
    "3102": {
      "op": "ISZERO"
    },
    "3103": {
      "op": "PUSH2",
      "value": "0xC2A"
    },
    "3106": {
      "op": "JUMPI"
    },
    "3107": {
      "op": "PUSH2",
      "value": "0xC2A"
    },
    "3110": {
      "op": "PUSH2",
      "value": "0xBEA"
    },
    "3113": {
      "jump": "i",
      "op": "JUMP"
    },
    "3114": {
      "op": "JUMPDEST"
    },
    "3115": {
      "op": "POP"
    },
    "3116": {
      "op": "SUB"
    },
    "3117": {
      "op": "SWAP1"
    },
    "3118": {
      "jump": "o",
      "op": "JUMP"
    },
    "3119": {
      "op": "JUMPDEST"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3122": {
      "op": "DUP2"
    },
    "3123": {
      "op": "DUP2"
    },
    "3124": {
      "op": "SHR"
    },
    "3125": {
      "op": "SWAP1"
    },
    "3126": {
      "op": "DUP3"
    },
    "3127": {
      "op": "AND"
    },
    "3128": {
      "op": "DUP1"
    },
    "3129": {
      "op": "PUSH2",
      "value": "0xC43"
    },
    "3132": {
      "op": "JUMPI"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3135": {
      "op": "DUP3"
    },
    "3136": {
      "op": "AND"
    },
    "3137": {
      "op": "SWAP2"
    },
    "3138": {
      "op": "POP"
    },
    "3139": {
      "op": "JUMPDEST"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3142": {
      "op": "DUP3"
    },
    "3143": {
      "op": "LT"
    },
    "3144": {
      "op": "DUP2"
    },
    "3145": {
      "op": "EQ"
    },
    "3146": {
      "op": "ISZERO"
    },
    "3147": {
      "op": "PUSH2",
      "value": "0xC64"
    },
    "3150": {
      "op": "JUMPI"
    },
    "3151": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3158": {
      "op": "SHL"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3161": {
      "op": "MSTORE"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3166": {
      "op": "MSTORE"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3171": {
      "op": "REVERT"
    },
    "3172": {
      "op": "JUMPDEST"
    },
    "3173": {
      "op": "POP"
    },
    "3174": {
      "op": "SWAP2"
    },
    "3175": {
      "op": "SWAP1"
    },
    "3176": {
      "op": "POP"
    },
    "3177": {
      "jump": "o",
      "op": "JUMP"
    },
    "3178": {
      "op": "JUMPDEST"
    },
    "3179": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3186": {
      "op": "SHL"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3189": {
      "op": "MSTORE"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3199": {
      "op": "REVERT"
    },
    "3200": {
      "op": "JUMPDEST"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3203": {
      "op": "DUP1"
    },
    "3204": {
      "op": "DUP4"
    },
    "3205": {
      "op": "SLOAD"
    },
    "3206": {
      "op": "DUP2"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "DUP3"
    },
    "3210": {
      "op": "DUP2"
    },
    "3211": {
      "op": "SHR"
    },
    "3212": {
      "op": "SWAP2"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "op": "DUP1"
    },
    "3215": {
      "op": "DUP4"
    },
    "3216": {
      "op": "AND"
    },
    "3217": {
      "op": "DUP1"
    },
    "3218": {
      "op": "PUSH2",
      "value": "0xC9C"
    },
    "3221": {
      "op": "JUMPI"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3224": {
      "op": "DUP4"
    },
    "3225": {
      "op": "AND"
    },
    "3226": {
      "op": "SWAP3"
    },
    "3227": {
      "op": "POP"
    },
    "3228": {
      "op": "JUMPDEST"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3231": {
      "op": "DUP1"
    },
    "3232": {
      "op": "DUP5"
    },
    "3233": {
      "op": "LT"
    },
    "3234": {
      "op": "DUP3"
    },
    "3235": {
      "op": "EQ"
    },
    "3236": {
      "op": "ISZERO"
    },
    "3237": {
      "op": "PUSH2",
      "value": "0xCBC"
    },
    "3240": {
      "op": "JUMPI"
    },
    "3241": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3248": {
      "op": "SHL"
    },
    "3249": {
      "op": "DUP7"
    },
    "3250": {
      "op": "MSTORE"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3258": {
      "op": "DUP7"
    },
    "3259": {
      "op": "REVERT"
    },
    "3260": {
      "op": "JUMPDEST"
    },
    "3261": {
      "op": "DUP2"
    },
    "3262": {
      "op": "DUP1"
    },
    "3263": {
      "op": "ISZERO"
    },
    "3264": {
      "op": "PUSH2",
      "value": "0xCD0"
    },
    "3267": {
      "op": "JUMPI"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "DUP2"
    },
    "3271": {
      "op": "EQ"
    },
    "3272": {
      "op": "PUSH2",
      "value": "0xCE1"
    },
    "3275": {
      "op": "JUMPI"
    },
    "3276": {
      "op": "PUSH2",
      "value": "0xD0E"
    },
    "3279": {
      "op": "JUMP"
    },
    "3280": {
      "op": "JUMPDEST"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3283": {
      "op": "NOT"
    },
    "3284": {
      "op": "DUP7"
    },
    "3285": {
      "op": "AND"
    },
    "3286": {
      "op": "DUP10"
    },
    "3287": {
      "op": "MSTORE"
    },
    "3288": {
      "op": "DUP5"
    },
    "3289": {
      "op": "DUP10"
    },
    "3290": {
      "op": "ADD"
    },
    "3291": {
      "op": "SWAP7"
    },
    "3292": {
      "op": "POP"
    },
    "3293": {
      "op": "PUSH2",
      "value": "0xD0E"
    },
    "3296": {
      "op": "JUMP"
    },
    "3297": {
      "op": "JUMPDEST"
    },
    "3298": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3300": {
      "op": "DUP11"
    },
    "3301": {
      "op": "DUP2"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3305": {
      "op": "SWAP1"
    },
    "3306": {
      "op": "KECCAK256"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3309": {
      "op": "JUMPDEST"
    },
    "3310": {
      "op": "DUP7"
    },
    "3311": {
      "op": "DUP2"
    },
    "3312": {
      "op": "LT"
    },
    "3313": {
      "op": "ISZERO"
    },
    "3314": {
      "op": "PUSH2",
      "value": "0xD06"
    },
    "3317": {
      "op": "JUMPI"
    },
    "3318": {
      "op": "DUP2"
    },
    "3319": {
      "op": "SLOAD"
    },
    "3320": {
      "op": "DUP12"
    },
    "3321": {
      "op": "DUP3"
    },
    "3322": {
      "op": "ADD"
    },
    "3323": {
      "op": "MSTORE"
    },
    "3324": {
      "op": "SWAP1"
    },
    "3325": {
      "op": "DUP6"
    },
    "3326": {
      "op": "ADD"
    },
    "3327": {
      "op": "SWAP1"
    },
    "3328": {
      "op": "DUP4"
    },
    "3329": {
      "op": "ADD"
    },
    "3330": {
      "op": "PUSH2",
      "value": "0xCED"
    },
    "3333": {
      "op": "JUMP"
    },
    "3334": {
      "op": "JUMPDEST"
    },
    "3335": {
      "op": "POP"
    },
    "3336": {
      "op": "POP"
    },
    "3337": {
      "op": "DUP5"
    },
    "3338": {
      "op": "DUP10"
    },
    "3339": {
      "op": "ADD"
    },
    "3340": {
      "op": "SWAP7"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "op": "JUMPDEST"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "op": "SWAP5"
    },
    "3345": {
      "op": "SWAP9"
    },
    "3346": {
      "op": "SWAP8"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "op": "POP"
    },
    "3349": {
      "op": "POP"
    },
    "3350": {
      "op": "POP"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "op": "POP"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "jump": "o",
      "op": "JUMP"
    },
    "3356": {
      "op": "JUMPDEST"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3361": {
      "op": "NOT"
    },
    "3362": {
      "op": "DUP3"
    },
    "3363": {
      "op": "EQ"
    },
    "3364": {
      "op": "ISZERO"
    },
    "3365": {
      "op": "PUSH2",
      "value": "0xD30"
    },
    "3368": {
      "op": "JUMPI"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xD30"
    },
    "3372": {
      "op": "PUSH2",
      "value": "0xBEA"
    },
    "3375": {
      "jump": "i",
      "op": "JUMP"
    },
    "3376": {
      "op": "JUMPDEST"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "ADD"
    },
    "3381": {
      "op": "SWAP1"
    },
    "3382": {
      "jump": "o",
      "op": "JUMP"
    },
    "3383": {
      "op": "JUMPDEST"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3386": {
      "op": "DUP2"
    },
    "3387": {
      "op": "PUSH2",
      "value": "0xD46"
    },
    "3390": {
      "op": "JUMPI"
    },
    "3391": {
      "op": "PUSH2",
      "value": "0xD46"
    },
    "3394": {
      "op": "PUSH2",
      "value": "0xBEA"
    },
    "3397": {
      "jump": "i",
      "op": "JUMP"
    },
    "3398": {
      "op": "JUMPDEST"
    },
    "3399": {
      "op": "POP"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3402": {
      "op": "NOT"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "SWAP1"
    },
    "3405": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e414772378fd04f74a31f6f4ff3692a32066e080",
  "source": "pragma solidity ^0.8.12;\n\ncontract veAllocate {\n    mapping(address => mapping(string => uint256)) veAllocation;\n    mapping(address => uint256) allocationCounter;\n    mapping(address => mapping(uint256 => string)) allocationToId;\n    mapping(address => mapping(string => uint256)) idToAllocation;\n    mapping(address => uint256) _totalAllocation;\n\n    event AllocationSet(\n        address indexed sender,\n        string indexed id,\n        uint256 amount\n    );\n    event AllocationRemoved(address indexed sender, string indexed id);\n\n    function getveAllocation(address _address, string calldata _id)\n        public\n        view\n        returns (uint256)\n    {\n        // string is {DataNFT Address}-{chain id}\n        // returns the allocation perc for given address\n        return veAllocation[_address][_id];\n    }\n\n    function getTotalAllocation(address _address)\n        public\n        view\n        returns (uint256)\n    {\n        // string is {DataNFT Address}-{chain id}\n        // returns the allocation perc for given address\n        return _totalAllocation[_address];\n    }\n\n    function setAllocation(uint256 amount, string calldata _id) external {\n        require(bytes(_id).length < 50, \"Id too long\");\n        require(amount <= 1000, \"BM\");\n\n        if (veAllocation[msg.sender][_id] == 0) {\n            require(amount > 0, \"SM\");\n            allocationToId[msg.sender][allocationCounter[msg.sender]] = _id;\n            idToAllocation[msg.sender][_id] = allocationCounter[msg.sender];\n            allocationCounter[msg.sender]++;\n        }\n\n        _totalAllocation[msg.sender] =\n            _totalAllocation[msg.sender] +\n            amount -\n            veAllocation[msg.sender][_id];\n\n        if (amount == 0) {\n            _removeAllocation(_id);\n        } else {\n            veAllocation[msg.sender][_id] = amount;\n        }\n        emit AllocationSet(msg.sender, _id, amount);\n    }\n\n    function _removeAllocation(string calldata _id) internal {\n        require(veAllocation[msg.sender][_id] > 0, \"SM\");\n\n        veAllocation[msg.sender][_id] = 0;\n\n        uint256 no = idToAllocation[msg.sender][_id];\n\n        allocationToId[msg.sender][no] = allocationToId[msg.sender][\n            allocationCounter[msg.sender] - 1\n        ]; // swap last with this one\n        idToAllocation[msg.sender][allocationToId[msg.sender][no]] = no; // swap last with this one\n\n        delete allocationToId[msg.sender][allocationCounter[msg.sender] - 1];\n        delete idToAllocation[msg.sender][_id];\n\n        allocationCounter[msg.sender]--;\n\n        emit AllocationRemoved(msg.sender, _id);\n    }\n\n    function getTotalAllocation(\n        address _address,\n        uint256 limit,\n        uint256 skip\n    )\n        external\n        view\n        returns (\n            string[] memory allocationIds,\n            uint256[] memory allocationAmounts\n        )\n    {\n        // array of strings\n        allocationIds = new string[](allocationCounter[_address]);\n\n        allocationAmounts = new uint256[](allocationCounter[_address]);\n\n        uint256 _limit = 0;\n        if (allocationCounter[_address] > limit + skip) {\n            _limit = limit;\n        } else {\n            _limit = allocationCounter[_address] - skip;\n        }\n\n        for (uint256 i = skip; i < skip + _limit; i++) {\n            allocationIds[i] = allocationToId[_address][i];\n            allocationAmounts[i] = veAllocation[_address][\n                allocationToId[_address][i]\n            ];\n        }\n    }\n}\n",
  "sourceMap": "26:3465:0:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/ve/veAllocate.sol",
  "type": "contract"
}