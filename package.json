{
  "name": "ocean-subgraph",
  "version": "3.0.9",
  "scripts": {
    "start": "",
    "quickstart:development": "node ./scripts/generatenetworkssubgraphs.js development && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:barge": "node ./scripts/generatenetworkssubgraphs.js development && npm run codegen && npm run create:local-barge && npm run deploy:local-barge",
    "quickstart:rinkeby": "node ./scripts/generatenetworkssubgraphs.js rinkeby && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:goerli": "node ./scripts/generatenetworkssubgraphs.js goerli && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:ropsten": "node ./scripts/generatenetworkssubgraphs.js ropsten && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:mumbai": "node ./scripts/generatenetworkssubgraphs.js mumbai && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:moonbase": "node ./scripts/generatenetworkssubgraphs.js moonbase && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:polygon": "node ./scripts/generatenetworkssubgraphs.js polygon && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:mainnet": "node ./scripts/generatenetworkssubgraphs.js mainnet && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:moonriver": "node ./scripts/generatenetworkssubgraphs.js moonriver && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:energyweb": "node ./scripts/generatenetworkssubgraphs.js energyweb && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:sepolia": "node ./scripts/generatenetworkssubgraphs.js sepolia && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:gen-x-testnet": "node ./scripts/generatenetworkssubgraphs.js gen-x-testnet && npm run codegen && npm run create:local && npm run deploy:local",
    "quickstart:bsc": "node ./scripts/generatenetworkssubgraphs.js bsc && npm run codegen && npm run create:local && npm run deploy:local",
    "create:thegraph": "graph create oceanprotocol/ocean-subgraph --node https://api.thegraph.com/deploy/",
    "create:local": "graph create oceanprotocol/ocean-subgraph --node http://127.0.0.1:8020",
    "create:local-barge": "graph create oceanprotocol/ocean-subgraph --node http://172.15.0.15:8020",
    "codegen": "graph codegen --output-dir src/@types",
    "build": "graph build",
    "deploy:thegraph": "graph deploy oceanprotocol/ocean-subgraph -l $npm_package_version --ipfs https://api.thegraph.com/ipfs/ --node https://api.thegraph.com/deploy/",
    "deploy:local": "graph deploy oceanprotocol/ocean-subgraph subgraph.yaml -l $npm_package_version --debug --ipfs http://127.0.0.1:5001 --node http://127.0.0.1:8020",
    "deploy:local-barge": "graph deploy oceanprotocol/ocean-subgraph subgraph.yaml -l $npm_package_version --debug --ipfs http://172.15.0.16:5001 --node http://172.15.0.15:8020",
    "test": "npm run codegen && npm run lint && npm run type-check",
    "test-integration": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/**/*.test.ts'",
    "test-dispenser": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/Dispenser.test.ts'",
    "test-simple": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/SimpleSubgraph.test.ts'",
    "test-fixed": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/FixedRateExchange.test.ts'",
    "test-users": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/users.test.ts'",
    "test-ve": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/VeOcean.test.ts'",
    "test-df": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/DFRewards.test.ts'",
    "test-dt": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/Datatoken.test.ts'",
    "test-zend": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/ZEnding.test.ts'",
    "test-publish-consume": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/SimplePublishConsume.test.ts'",
    "test-nft": "TS_NODE_PROJECT='test/integration/tsconfig.json' mocha --config=test/integration/.mocharc.json --node-env=test --exit 'test/integration/Nft.test.ts'",
    "lint": "eslint --ignore-path .gitignore --ext .js --ext .ts --ext .tsx .",
    "lint:fix": "eslint --ignore-path .gitignore --ext .js,.ts,.tsx . --fix",
    "format": "prettier --ignore-path .gitignore './**/*.{css,yml,js,ts,tsx,json,yaml}' --write",
    "type-check": "tsc --noEmit",
    "replaceVersion": "node ./scripts/replaceVersion.js",
    "release": "release-it --non-interactive",
    "changelog": "auto-changelog -p"
  },
  "devDependencies": {
    "@types/chai": "^4.3.5",
    "@types/chai-spies": "^1.0.3",
    "@types/mocha": "^10.0.1",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "auto-changelog": "^2.4.0",
    "chai": "^4.3.7",
    "chai-spies": "^1.0.0",
    "eslint": "^7.32.0",
    "eslint-config-oceanprotocol": "^2.0.4",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-standard": "^5.0.0",
    "mocha": "^10.2.0",
    "mock-local-storage": "^1.1.24",
    "prettier": "^2.8.8",
    "release-it": "^15.11.0",
    "source-map-support": "^0.5.21",
    "ts-node": "^10.9.1",
    "ts-node-dev": "^2.0.0",
    "ts-node-register": "^1.0.0",
    "typescript": "^5.0.4",
    "@oceanprotocol/lib": "^3.0.4",
    "cross-fetch": "^3.1.6",
    "ethereumjs-util": "^7.1.5"
  },
  "dependencies": {
    "@oceanprotocol/contracts": "^1.1.14",
    "@graphprotocol/graph-cli": "^0.38.0",
    "@graphprotocol/graph-ts": "^0.30.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/oceanprotocol/ocean-subgraph.git"
  },
  "license": "Apache-2.0",
  "release-it": {
    "hooks": {
      "after:bump": "npm run changelog && npm run replaceVersion"
    },
    "plugins": {},
    "git": {
      "tagName": "v${version}"
    },
    "github": {
      "release": true
    },
    "npm": {
      "publish": false
    }
  }
}
